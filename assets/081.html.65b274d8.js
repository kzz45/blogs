import{r as e,o,a as c,b as n,d as p,F as l,e as s,c as t}from"./app.897a2dcd.js";import{_ as r}from"./plugin-vue_export-helper.21dcd24c.js";const u={},i=n("h1",{id:"\u54C8\u5E0C\u7B97\u6CD5",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u54C8\u5E0C\u7B97\u6CD5","aria-hidden":"true"},"#"),s(" \u54C8\u5E0C\u7B97\u6CD5")],-1),k={id:"_1-\u4E24\u6570\u4E4B\u548C",tabindex:"-1"},b=n("a",{class:"header-anchor",href:"#_1-\u4E24\u6570\u4E4B\u548C","aria-hidden":"true"},"#",-1),m=s(),d={href:"https://leetcode.cn/problems/two-sum/description/",target:"_blank",rel:"noopener noreferrer"},h=s("1. \u4E24\u6570\u4E4B\u548C"),_=t(`<details class="custom-container details"><summary>\u4E24\u6570\u4E4B\u548C</summary><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">twoSum</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> nums<span class="token punctuation">,</span> target<span class="token punctuation">)</span><span class="token punctuation">:</span>
        temp <span class="token operator">=</span> <span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">for</span> i<span class="token punctuation">,</span> num <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span><span class="token punctuation">:</span>
            <span class="token keyword">if</span> target <span class="token operator">-</span> num <span class="token keyword">in</span> temp<span class="token punctuation">:</span>
                <span class="token keyword">return</span> <span class="token punctuation">[</span>temp<span class="token punctuation">[</span>target <span class="token operator">-</span> num<span class="token punctuation">]</span><span class="token punctuation">,</span> i<span class="token punctuation">]</span>
            temp<span class="token punctuation">[</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> i
        <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div></details>`,1),y={id:"_202-\u5FEB\u4E50\u6570",tabindex:"-1"},w=n("a",{class:"header-anchor",href:"#_202-\u5FEB\u4E50\u6570","aria-hidden":"true"},"#",-1),f=s(),g={href:"https://leetcode.cn/problems/happy-number/",target:"_blank",rel:"noopener noreferrer"},v=s("202. \u5FEB\u4E50\u6570"),x=t(`<details class="custom-container details"><summary>202. \u5FEB\u4E50\u6570</summary><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token comment"># \u300C\u5FEB\u4E50\u6570\u300D \u5B9A\u4E49\u4E3A\uFF1A</span>
<span class="token comment"># \u5BF9\u4E8E\u4E00\u4E2A\u6B63\u6574\u6570\uFF0C\u6BCF\u4E00\u6B21\u5C06\u8BE5\u6570\u66FF\u6362\u4E3A\u5B83\u6BCF\u4E2A\u4F4D\u7F6E\u4E0A\u7684\u6570\u5B57\u7684\u5E73\u65B9\u548C\u3002</span>
<span class="token comment"># \u7136\u540E\u91CD\u590D\u8FD9\u4E2A\u8FC7\u7A0B\u76F4\u5230\u8FD9\u4E2A\u6570\u53D8\u4E3A 1\uFF0C\u4E5F\u53EF\u80FD\u662F \u65E0\u9650\u5FAA\u73AF \u4F46\u59CB\u7EC8\u53D8\u4E0D\u5230 1\u3002</span>
<span class="token comment"># \u5982\u679C\u8FD9\u4E2A\u8FC7\u7A0B \u7ED3\u679C\u4E3A 1\uFF0C\u90A3\u4E48\u8FD9\u4E2A\u6570\u5C31\u662F\u5FEB\u4E50\u6570\u3002</span>


<span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">isHappy</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> n<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token builtin">bool</span><span class="token punctuation">:</span>
        <span class="token keyword">def</span> <span class="token function">cal</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">:</span>
            res <span class="token operator">=</span> <span class="token number">0</span>
            <span class="token keyword">while</span> num<span class="token punctuation">:</span>
                res <span class="token operator">+=</span> <span class="token punctuation">(</span>num <span class="token operator">%</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token operator">**</span><span class="token number">2</span>
                num <span class="token operator">=</span> num <span class="token operator">//</span> <span class="token number">10</span>
            <span class="token keyword">return</span> res

        record <span class="token operator">=</span> <span class="token builtin">set</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>
            n <span class="token operator">=</span> cal<span class="token punctuation">(</span>n<span class="token punctuation">)</span>
            <span class="token keyword">if</span> n <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span>
                <span class="token keyword">return</span> <span class="token boolean">True</span>
            <span class="token comment"># \u5982\u679C\u4E2D\u95F4\u7ED3\u679C\u91CD\u590D\u51FA\u73B0\uFF0C\u8BF4\u660E\u9677\u5165\u6B7B\u5FAA\u73AF\u4E86\uFF0C\u8BE5\u6570\u4E0D\u662F\u5FEB\u4E50\u6570</span>
            <span class="token keyword">if</span> n <span class="token keyword">in</span> record<span class="token punctuation">:</span>
                <span class="token keyword">return</span> <span class="token boolean">False</span>
            <span class="token keyword">else</span><span class="token punctuation">:</span>
                record<span class="token punctuation">.</span>add<span class="token punctuation">(</span>n<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div></details>`,1),q={id:"_242-\u6709\u6548\u7684\u5B57\u6BCD\u5F02\u4F4D\u8BCD",tabindex:"-1"},S=n("a",{class:"header-anchor",href:"#_242-\u6709\u6548\u7684\u5B57\u6BCD\u5F02\u4F4D\u8BCD","aria-hidden":"true"},"#",-1),I=s(),F={href:"https://leetcode.cn/problems/valid-anagram/",target:"_blank",rel:"noopener noreferrer"},N=s("242. \u6709\u6548\u7684\u5B57\u6BCD\u5F02\u4F4D\u8BCD"),T=t(`<details class="custom-container details"><summary>242. \u6709\u6548\u7684\u5B57\u6BCD\u5F02\u4F4D\u8BCD</summary><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>s <span class="token operator">=</span> <span class="token string">&quot;rat&quot;</span>
t <span class="token operator">=</span> <span class="token string">&quot;car&quot;</span>


<span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">isAnagram</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> s<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">,</span> t<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token builtin">bool</span><span class="token punctuation">:</span>
        temp <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">26</span>
        <span class="token keyword">for</span> i <span class="token keyword">in</span> s<span class="token punctuation">:</span>
            temp<span class="token punctuation">[</span><span class="token builtin">ord</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token number">1</span>
        <span class="token keyword">for</span> i <span class="token keyword">in</span> t<span class="token punctuation">:</span>
            temp<span class="token punctuation">[</span><span class="token builtin">ord</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">-=</span> <span class="token number">1</span>

        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">26</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            <span class="token keyword">if</span> temp<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">:</span>
                <span class="token keyword">return</span> <span class="token boolean">False</span>
        <span class="token keyword">return</span> <span class="token boolean">True</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div></details>`,1),V={id:"_349-\u4E24\u4E2A\u6570\u7EC4\u7684\u4EA4\u96C6",tabindex:"-1"},B=n("a",{class:"header-anchor",href:"#_349-\u4E24\u4E2A\u6570\u7EC4\u7684\u4EA4\u96C6","aria-hidden":"true"},"#",-1),C=s(),E={href:"https://leetcode.cn/problems/intersection-of-two-arrays/",target:"_blank",rel:"noopener noreferrer"},L=s("349. \u4E24\u4E2A\u6570\u7EC4\u7684\u4EA4\u96C6"),A=t(`<details class="custom-container details"><summary>349. \u4E24\u4E2A\u6570\u7EC4\u7684\u4EA4\u96C6</summary><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token comment"># nums1 = [4, 9, 5]</span>
<span class="token comment"># nums2 = [9, 4, 9, 8, 4]</span>

<span class="token comment"># print(list(set(nums1) &amp; set(nums2)))</span>

<span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">intersection</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> nums1<span class="token punctuation">,</span> nums2<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">set</span><span class="token punctuation">(</span>nums1<span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token builtin">set</span><span class="token punctuation">(</span>nums2<span class="token punctuation">)</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">intersection2</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> nums1<span class="token punctuation">,</span> nums2<span class="token punctuation">)</span><span class="token punctuation">:</span>
        ans <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
        temp_dict <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
        <span class="token keyword">for</span> i <span class="token keyword">in</span> nums1<span class="token punctuation">:</span>
            temp_dict<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span>

        <span class="token keyword">for</span> i <span class="token keyword">in</span> nums2<span class="token punctuation">:</span>
            <span class="token keyword">if</span> i <span class="token keyword">in</span> temp_dict<span class="token punctuation">.</span>keys<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">and</span> temp_dict<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span>
                ans<span class="token punctuation">.</span>append<span class="token punctuation">(</span>i<span class="token punctuation">)</span>
                temp_dict<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span>

        <span class="token keyword">return</span> ans
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div></details>`,1),H={id:"_454-\u56DB\u6570\u76F8\u52A0-ii",tabindex:"-1"},j=n("a",{class:"header-anchor",href:"#_454-\u56DB\u6570\u76F8\u52A0-ii","aria-hidden":"true"},"#",-1),z=s(),D={href:"https://leetcode.cn/problems/4sum-ii/",target:"_blank",rel:"noopener noreferrer"},G=s("454. \u56DB\u6570\u76F8\u52A0 II"),J=t(`<details class="custom-container details"><summary>454. \u56DB\u6570\u76F8\u52A0 II</summary><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">fourSumCount</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> nums1<span class="token punctuation">,</span> nums2<span class="token punctuation">,</span> nums3<span class="token punctuation">,</span> nums4<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token builtin">int</span><span class="token punctuation">:</span>
        hashmap <span class="token operator">=</span> <span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">for</span> n1 <span class="token keyword">in</span> nums1<span class="token punctuation">:</span>
            <span class="token keyword">for</span> n2 <span class="token keyword">in</span> nums2<span class="token punctuation">:</span>
                <span class="token keyword">if</span> n1 <span class="token operator">+</span> n2 <span class="token keyword">in</span> hashmap<span class="token punctuation">:</span>
                    hashmap<span class="token punctuation">[</span>n1 <span class="token operator">+</span> n2<span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token number">1</span>
                <span class="token keyword">else</span><span class="token punctuation">:</span>
                    hashmap<span class="token punctuation">[</span>n1 <span class="token operator">+</span> n2<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span>
        count <span class="token operator">=</span> <span class="token number">0</span>
        <span class="token keyword">for</span> n3 <span class="token keyword">in</span> nums3<span class="token punctuation">:</span>
            <span class="token keyword">for</span> n4 <span class="token keyword">in</span> nums4<span class="token punctuation">:</span>
                key <span class="token operator">=</span> <span class="token operator">-</span> n3 <span class="token operator">-</span> n4
                <span class="token keyword">if</span> key <span class="token keyword">in</span> hashmap<span class="token punctuation">:</span>
                    count <span class="token operator">+=</span> hashmap<span class="token punctuation">[</span>key<span class="token punctuation">]</span>
        <span class="token keyword">return</span> count
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div></details>`,1),K={id:"_1002-\u67E5\u627E\u5171\u7528\u5B57\u7B26",tabindex:"-1"},M=n("a",{class:"header-anchor",href:"#_1002-\u67E5\u627E\u5171\u7528\u5B57\u7B26","aria-hidden":"true"},"#",-1),O=s(),P={href:"https://leetcode.cn/problems/find-common-characters/",target:"_blank",rel:"noopener noreferrer"},Q=s("1002. \u67E5\u627E\u5171\u7528\u5B57\u7B26"),R=t(`<details class="custom-container details"><summary>1002. \u67E5\u627E\u5171\u7528\u5B57\u7B26</summary><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">commonChars</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> words<span class="token punctuation">)</span><span class="token punctuation">:</span>
        min_count <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token builtin">float</span><span class="token punctuation">(</span><span class="token string">&quot;inf&quot;</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">26</span>
        <span class="token keyword">for</span> word <span class="token keyword">in</span> words<span class="token punctuation">:</span>
            temp <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">26</span>
            <span class="token keyword">for</span> i <span class="token keyword">in</span> word<span class="token punctuation">:</span>
                temp<span class="token punctuation">[</span><span class="token builtin">ord</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token number">1</span>
            <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">26</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
                min_count<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token builtin">min</span><span class="token punctuation">(</span>min_count<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> temp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>

        res <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">26</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            res<span class="token punctuation">.</span>extend<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token builtin">chr</span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">*</span> min_count<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> res
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div></details>`,1);function U(W,X){const a=e("ExternalLinkIcon");return o(),c(l,null,[i,n("h2",k,[b,m,n("a",d,[h,p(a)])]),_,n("h2",y,[w,f,n("a",g,[v,p(a)])]),x,n("h2",q,[S,I,n("a",F,[N,p(a)])]),T,n("h2",V,[B,C,n("a",E,[L,p(a)])]),A,n("h2",H,[j,z,n("a",D,[G,p(a)])]),J,n("h2",K,[M,O,n("a",P,[Q,p(a)])]),R],64)}var $=r(u,[["render",U]]);export{$ as default};
