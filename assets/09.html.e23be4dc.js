import{r as t,o,a as l,b as n,d as e,F as c,e as s,c as p}from"./app.897a2dcd.js";import{_ as r}from"./plugin-vue_export-helper.21dcd24c.js";const i={},u={id:"\u5251\u6307-offer-\u7B2C-2-\u7248",tabindex:"-1"},k=n("a",{class:"header-anchor",href:"#\u5251\u6307-offer-\u7B2C-2-\u7248","aria-hidden":"true"},"#",-1),d=s(),b={href:"https://leetcode.cn/problem-list/xb9nqhhg/",target:"_blank",rel:"noopener noreferrer"},m=s("\u5251\u6307 Offer\uFF08\u7B2C 2 \u7248\uFF09"),h=n("blockquote",null,[n("p",null,"\u8BB0\u5F55\u5237\u5251\u6307\u9898\u76EE")],-1),f={id:"\u5251\u6307-offer-03-\u6570\u7EC4\u4E2D\u91CD\u590D\u7684\u6570\u5B57",tabindex:"-1"},_=n("a",{class:"header-anchor",href:"#\u5251\u6307-offer-03-\u6570\u7EC4\u4E2D\u91CD\u590D\u7684\u6570\u5B57","aria-hidden":"true"},"#",-1),y=s(),w={href:"https://leetcode.cn/problems/shu-zu-zhong-zhong-fu-de-shu-zi-lcof/description/",target:"_blank",rel:"noopener noreferrer"},g=s("\u5251\u6307 Offer 03. \u6570\u7EC4\u4E2D\u91CD\u590D\u7684\u6570\u5B57"),x=p(`<details class="custom-container details"><summary>\u6570\u7EC4\u4E2D\u91CD\u590D\u7684\u6570\u5B57 \u3010\u54C8\u5E0C\u8868\u3011</summary><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">findRepeatNumber</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> nums<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token builtin">int</span><span class="token punctuation">:</span>
        dic <span class="token operator">=</span> <span class="token builtin">set</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">for</span> num <span class="token keyword">in</span> nums<span class="token punctuation">:</span>
            <span class="token keyword">if</span> num <span class="token keyword">in</span> dic<span class="token punctuation">:</span>
                <span class="token keyword">return</span> num
            dic<span class="token punctuation">.</span>add<span class="token punctuation">(</span>num<span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div></details>`,1),v={id:"\u5251\u6307-offer-05-\u66FF\u6362\u7A7A\u683C",tabindex:"-1"},N=n("a",{class:"header-anchor",href:"#\u5251\u6307-offer-05-\u66FF\u6362\u7A7A\u683C","aria-hidden":"true"},"#",-1),L=s(),q={href:"https://leetcode.cn/problems/ti-huan-kong-ge-lcof/",target:"_blank",rel:"noopener noreferrer"},z=s("\u5251\u6307 Offer 05. \u66FF\u6362\u7A7A\u683C"),O=p(`<details class="custom-container details"><summary>\u66FF\u6362\u7A7A\u683C</summary><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">replaceSpace</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> s<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token builtin">str</span><span class="token punctuation">:</span>
        res <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
        <span class="token keyword">for</span> i <span class="token keyword">in</span> s<span class="token punctuation">:</span>
            <span class="token keyword">if</span> i <span class="token operator">==</span> <span class="token string">&quot; &quot;</span><span class="token punctuation">:</span>
                res<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">&quot;%20&quot;</span><span class="token punctuation">)</span>
            <span class="token keyword">else</span><span class="token punctuation">:</span>
                res<span class="token punctuation">.</span>append<span class="token punctuation">(</span>i<span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>res<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div></details>`,1),S={id:"\u5251\u6307-offer-24-\u53CD\u8F6C\u94FE\u8868",tabindex:"-1"},I=n("a",{class:"header-anchor",href:"#\u5251\u6307-offer-24-\u53CD\u8F6C\u94FE\u8868","aria-hidden":"true"},"#",-1),V=s(),B={href:"https://leetcode.cn/problems/fan-zhuan-lian-biao-lcof/description/",target:"_blank",rel:"noopener noreferrer"},E=s("\u5251\u6307 Offer 24. \u53CD\u8F6C\u94FE\u8868"),F=p(`<details class="custom-container details"><summary>\u53CD\u8F6C\u94FE\u8868</summary><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token comment"># Definition for singly-linked list.</span>
<span class="token keyword">class</span> <span class="token class-name">ListNode</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> val<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token builtin">next</span><span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>val <span class="token operator">=</span> val
        self<span class="token punctuation">.</span><span class="token builtin">next</span> <span class="token operator">=</span> <span class="token builtin">next</span>


<span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">reverseList</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> head<span class="token punctuation">:</span> ListNode<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> ListNode<span class="token punctuation">:</span>
        pre <span class="token operator">=</span> <span class="token boolean">None</span>
        cur <span class="token operator">=</span> <span class="token boolean">None</span>
        <span class="token keyword">while</span> head<span class="token punctuation">:</span>
            cur <span class="token operator">=</span> head<span class="token punctuation">.</span><span class="token builtin">next</span>  <span class="token comment"># \u6293\u624B</span>
            head<span class="token punctuation">.</span><span class="token builtin">next</span> <span class="token operator">=</span> pre  <span class="token comment"># \u53CD\u8F6C</span>
            pre <span class="token operator">=</span> head
            head <span class="token operator">=</span> cur      <span class="token comment"># \u5F80\u4E0B\u8D70</span>
        <span class="token keyword">return</span> pre
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div></details>`,1),T={id:"\u5251\u6307-offer-25-\u5408\u5E76\u4E24\u4E2A\u6392\u5E8F\u7684\u94FE\u8868",tabindex:"-1"},j=n("a",{class:"header-anchor",href:"#\u5251\u6307-offer-25-\u5408\u5E76\u4E24\u4E2A\u6392\u5E8F\u7684\u94FE\u8868","aria-hidden":"true"},"#",-1),C=s(),D={href:"https://leetcode.cn/problems/he-bing-liang-ge-pai-xu-de-lian-biao-lcof/",target:"_blank",rel:"noopener noreferrer"},R=s("\u5251\u6307 Offer 25. \u5408\u5E76\u4E24\u4E2A\u6392\u5E8F\u7684\u94FE\u8868"),A=p(`<details class="custom-container details"><summary>\u5408\u5E76\u4E24\u4E2A\u6392\u5E8F\u7684\u94FE\u8868</summary><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">ListNode</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> val<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token builtin">next</span><span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>val <span class="token operator">=</span> val
        self<span class="token punctuation">.</span><span class="token builtin">next</span> <span class="token operator">=</span> <span class="token builtin">next</span>


<span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">mergeTwoLists</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> list1<span class="token punctuation">:</span> ListNode<span class="token punctuation">,</span> list2<span class="token punctuation">:</span> ListNode<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> list1 <span class="token keyword">is</span> <span class="token boolean">None</span> <span class="token keyword">or</span> list2 <span class="token keyword">is</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
            <span class="token keyword">return</span> list2 <span class="token keyword">if</span> list1 <span class="token keyword">is</span> <span class="token boolean">None</span> <span class="token keyword">else</span> list1

        head <span class="token operator">=</span> ListNode<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>

        <span class="token keyword">if</span> list1<span class="token punctuation">.</span>val <span class="token operator">&lt;=</span> list2<span class="token punctuation">.</span>val<span class="token punctuation">:</span>
            head <span class="token operator">=</span> list1
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            head <span class="token operator">=</span> list2

        cur1 <span class="token operator">=</span> head<span class="token punctuation">.</span><span class="token builtin">next</span>
        <span class="token keyword">if</span> head <span class="token operator">==</span> list1<span class="token punctuation">:</span>
            cur2 <span class="token operator">=</span> list2
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            cur2 <span class="token operator">=</span> list1
        pre <span class="token operator">=</span> head
        <span class="token keyword">while</span> cur1 <span class="token keyword">and</span> cur2<span class="token punctuation">:</span>
            <span class="token keyword">if</span> cur1<span class="token punctuation">.</span>val <span class="token operator">&lt;=</span> cur2<span class="token punctuation">.</span>val<span class="token punctuation">:</span>
                pre<span class="token punctuation">.</span><span class="token builtin">next</span> <span class="token operator">=</span> cur1
                cur1 <span class="token operator">=</span> cur1<span class="token punctuation">.</span><span class="token builtin">next</span>
            <span class="token keyword">else</span><span class="token punctuation">:</span>
                pre<span class="token punctuation">.</span><span class="token builtin">next</span> <span class="token operator">=</span> cur2
                cur2 <span class="token operator">=</span> cur2<span class="token punctuation">.</span><span class="token builtin">next</span>
            pre <span class="token operator">=</span> pre<span class="token punctuation">.</span><span class="token builtin">next</span>
        <span class="token keyword">if</span> cur1<span class="token punctuation">:</span>
            pre<span class="token punctuation">.</span><span class="token builtin">next</span> <span class="token operator">=</span> cur1
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            pre<span class="token punctuation">.</span><span class="token builtin">next</span> <span class="token operator">=</span> cur2
        <span class="token keyword">return</span> head
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br></div></div></details>`,1),G={id:"\u5251\u6307-offer-58-ii-\u5DE6\u65CB\u8F6C\u5B57\u7B26\u4E32",tabindex:"-1"},H=n("a",{class:"header-anchor",href:"#\u5251\u6307-offer-58-ii-\u5DE6\u65CB\u8F6C\u5B57\u7B26\u4E32","aria-hidden":"true"},"#",-1),J=s(),K={href:"https://leetcode.cn/problems/zuo-xuan-zhuan-zi-fu-chuan-lcof/description/",target:"_blank",rel:"noopener noreferrer"},M=s("\u5251\u6307 Offer 58 - II. \u5DE6\u65CB\u8F6C\u5B57\u7B26\u4E32");function P(Q,U){const a=t("ExternalLinkIcon");return o(),l(c,null,[n("h1",u,[k,d,n("a",b,[m,e(a)])]),h,n("h2",f,[_,y,n("a",w,[g,e(a)])]),x,n("h2",v,[N,L,n("a",q,[z,e(a)])]),O,n("h2",S,[I,V,n("a",B,[E,e(a)])]),F,n("h2",T,[j,C,n("a",D,[R,e(a)])]),A,n("h2",G,[H,J,n("a",K,[M,e(a)])])],64)}var Y=r(i,[["render",P]]);export{Y as default};
