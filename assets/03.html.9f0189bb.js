import{r as t,o,a as l,b as n,d as e,F as c,c as a,e as s}from"./app.897a2dcd.js";import{_ as r}from"./plugin-vue_export-helper.21dcd24c.js";var i="/blogs/assets/linked_list.98c49754.png";const u={},k=a('<h1 id="\u94FE\u8868" tabindex="-1"><a class="header-anchor" href="#\u94FE\u8868" aria-hidden="true">#</a> \u94FE\u8868</h1><p><img src="'+i+`" alt=""></p><h2 id="\u94FE\u8868\u521D\u59CB\u5316" tabindex="-1"><a class="header-anchor" href="#\u94FE\u8868\u521D\u59CB\u5316" aria-hidden="true">#</a> \u94FE\u8868\u521D\u59CB\u5316</h2><ul><li>\u5355\u94FE\u8868</li></ul><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">ListNode</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> val<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>val <span class="token operator">=</span> val
        self<span class="token punctuation">.</span><span class="token builtin">next</span> <span class="token operator">=</span> <span class="token boolean">None</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><ul><li>\u53CC\u94FE\u8868</li></ul><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">ListNode</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> val<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>val <span class="token operator">=</span> val
        self<span class="token punctuation">.</span><span class="token builtin">next</span> <span class="token operator">=</span> <span class="token boolean">None</span>
        self<span class="token punctuation">.</span>prev <span class="token operator">=</span> <span class="token boolean">None</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div>`,7),b={id:"_2-\u4E24\u6570\u76F8\u52A0",tabindex:"-1"},d=n("a",{class:"header-anchor",href:"#_2-\u4E24\u6570\u76F8\u52A0","aria-hidden":"true"},"#",-1),m=s(),h={href:"https://leetcode.cn/problems/add-two-numbers/",target:"_blank",rel:"noopener noreferrer"},_=s("2. \u4E24\u6570\u76F8\u52A0"),y=a(`<details class="custom-container details"><summary>2. \u4E24\u6570\u76F8\u52A0</summary><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token comment"># Definition for singly-linked list.</span>
<span class="token keyword">class</span> <span class="token class-name">ListNode</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> val<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token builtin">next</span><span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>val <span class="token operator">=</span> val
        self<span class="token punctuation">.</span><span class="token builtin">next</span> <span class="token operator">=</span> <span class="token builtin">next</span>


<span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">addTwoNumbers</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> l1<span class="token punctuation">:</span> ListNode<span class="token punctuation">,</span> l2<span class="token punctuation">:</span> ListNode<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> ListNode<span class="token punctuation">:</span>
        <span class="token keyword">pass</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div></details>`,1),f={id:"_19-\u5220\u9664\u94FE\u8868\u7684\u5012\u6570\u7B2C-n-\u4E2A\u7ED3\u70B9",tabindex:"-1"},w=n("a",{class:"header-anchor",href:"#_19-\u5220\u9664\u94FE\u8868\u7684\u5012\u6570\u7B2C-n-\u4E2A\u7ED3\u70B9","aria-hidden":"true"},"#",-1),x=s(),v={href:"https://leetcode.cn/problems/remove-nth-node-from-end-of-list/",target:"_blank",rel:"noopener noreferrer"},g=s("19. \u5220\u9664\u94FE\u8868\u7684\u5012\u6570\u7B2C N \u4E2A\u7ED3\u70B9"),N=s(" \u{1F4AF}"),L=a(`<details class="custom-container details"><summary>19. \u5220\u9664\u94FE\u8868\u7684\u5012\u6570\u7B2C N \u4E2A\u7ED3\u70B9</summary><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token comment"># Definition for singly-linked list.</span>
<span class="token keyword">class</span> <span class="token class-name">ListNode</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> val<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token builtin">next</span><span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>val <span class="token operator">=</span> val
        self<span class="token punctuation">.</span><span class="token builtin">next</span> <span class="token operator">=</span> <span class="token builtin">next</span>


<span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">removeNthFromEnd</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> head<span class="token punctuation">:</span> ListNode<span class="token punctuation">,</span> n<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> ListNode<span class="token punctuation">:</span>
        dummy <span class="token operator">=</span> ListNode<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
        dummy<span class="token punctuation">.</span><span class="token builtin">next</span> <span class="token operator">=</span> head
        <span class="token comment"># \u5220\u9664\u5012\u6570\u7B2C n \u4E2A\uFF0C\u8981\u5148\u627E\u5012\u6570\u7B2C n + 1 \u4E2A\u8282\u70B9</span>
        x <span class="token operator">=</span> self<span class="token punctuation">.</span>findFromEnd<span class="token punctuation">(</span>dummy<span class="token punctuation">,</span> n <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span>
        <span class="token comment"># \u5220\u6389\u5012\u6570\u7B2C n \u4E2A\u8282\u70B9</span>
        x<span class="token punctuation">.</span><span class="token builtin">next</span> <span class="token operator">=</span> x<span class="token punctuation">.</span><span class="token builtin">next</span><span class="token punctuation">.</span><span class="token builtin">next</span>
        <span class="token keyword">return</span> dummy<span class="token punctuation">.</span><span class="token builtin">next</span>

    <span class="token keyword">def</span> <span class="token function">findFromEnd</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> head<span class="token punctuation">:</span> ListNode<span class="token punctuation">,</span> k<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        p1 <span class="token operator">=</span> head
        <span class="token comment"># p1 \u5148\u8D70 n \u6B65</span>
        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">:</span>
            p1 <span class="token operator">=</span> p1<span class="token punctuation">.</span><span class="token builtin">next</span>
        p2 <span class="token operator">=</span> head
        <span class="token comment"># p1 \u548C p2 \u540C\u65F6\u8D70 n - k \u6B65</span>
        <span class="token keyword">while</span> p1<span class="token punctuation">:</span>
            p2 <span class="token operator">=</span> p2<span class="token punctuation">.</span><span class="token builtin">next</span>
            p1 <span class="token operator">=</span> p1<span class="token punctuation">.</span><span class="token builtin">next</span>
        <span class="token comment"># p2 \u73B0\u5728\u6307\u5411\u7B2C n - k + 1 \u4E2A\u8282\u70B9\uFF0C\u5373\u5012\u6570\u7B2C k \u4E2A\u8282\u70B9</span>
        <span class="token keyword">return</span> p2
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div></details>`,1),S={id:"_21-\u5408\u5E76\u4E24\u4E2A\u6709\u5E8F\u94FE\u8868",tabindex:"-1"},I=n("a",{class:"header-anchor",href:"#_21-\u5408\u5E76\u4E24\u4E2A\u6709\u5E8F\u94FE\u8868","aria-hidden":"true"},"#",-1),D=s(),A={href:"https://leetcode.cn/problems/merge-two-sorted-lists/",target:"_blank",rel:"noopener noreferrer"},B=s("21. \u5408\u5E76\u4E24\u4E2A\u6709\u5E8F\u94FE\u8868"),z=a(`<details class="custom-container details"><summary>21. \u5408\u5E76\u4E24\u4E2A\u6709\u5E8F\u94FE\u8868</summary><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">ListNode</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> val<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token builtin">next</span><span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>val <span class="token operator">=</span> val
        self<span class="token punctuation">.</span><span class="token builtin">next</span> <span class="token operator">=</span> <span class="token builtin">next</span>


<span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">mergeTwoLists</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> list1<span class="token punctuation">:</span> ListNode<span class="token punctuation">,</span> list2<span class="token punctuation">:</span> ListNode<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> list1 <span class="token keyword">is</span> <span class="token boolean">None</span> <span class="token keyword">or</span> list2 <span class="token keyword">is</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
            <span class="token keyword">return</span> list2 <span class="token keyword">if</span> list1 <span class="token keyword">is</span> <span class="token boolean">None</span> <span class="token keyword">else</span> list1

        head <span class="token operator">=</span> ListNode<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>

        <span class="token keyword">if</span> list1<span class="token punctuation">.</span>val <span class="token operator">&lt;=</span> list2<span class="token punctuation">.</span>val<span class="token punctuation">:</span>
            head <span class="token operator">=</span> list1
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            head <span class="token operator">=</span> list2

        cur1 <span class="token operator">=</span> head<span class="token punctuation">.</span><span class="token builtin">next</span>
        <span class="token keyword">if</span> head <span class="token operator">==</span> list1<span class="token punctuation">:</span>
            cur2 <span class="token operator">=</span> list2
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            cur2 <span class="token operator">=</span> list1
        pre <span class="token operator">=</span> head
        <span class="token keyword">while</span> cur1 <span class="token keyword">and</span> cur2<span class="token punctuation">:</span>
            <span class="token keyword">if</span> cur1<span class="token punctuation">.</span>val <span class="token operator">&lt;=</span> cur2<span class="token punctuation">.</span>val<span class="token punctuation">:</span>
                pre<span class="token punctuation">.</span><span class="token builtin">next</span> <span class="token operator">=</span> cur1
                cur1 <span class="token operator">=</span> cur1<span class="token punctuation">.</span><span class="token builtin">next</span>
            <span class="token keyword">else</span><span class="token punctuation">:</span>
                pre<span class="token punctuation">.</span><span class="token builtin">next</span> <span class="token operator">=</span> cur2
                cur2 <span class="token operator">=</span> cur2<span class="token punctuation">.</span><span class="token builtin">next</span>
            pre <span class="token operator">=</span> pre<span class="token punctuation">.</span><span class="token builtin">next</span>
        <span class="token keyword">if</span> cur1<span class="token punctuation">:</span>
            pre<span class="token punctuation">.</span><span class="token builtin">next</span> <span class="token operator">=</span> cur1
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            pre<span class="token punctuation">.</span><span class="token builtin">next</span> <span class="token operator">=</span> cur2
        <span class="token keyword">return</span> head
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br></div></div></details>`,1),E={id:"_24-\u4E24\u4E24\u4EA4\u6362\u94FE\u8868\u4E2D\u7684\u8282\u70B9",tabindex:"-1"},F=n("a",{class:"header-anchor",href:"#_24-\u4E24\u4E24\u4EA4\u6362\u94FE\u8868\u4E2D\u7684\u8282\u70B9","aria-hidden":"true"},"#",-1),T=s(),j={href:"https://leetcode.cn/problems/swap-nodes-in-pairs/",target:"_blank",rel:"noopener noreferrer"},C=s("24. \u4E24\u4E24\u4EA4\u6362\u94FE\u8868\u4E2D\u7684\u8282\u70B9"),K=a(`<details class="custom-container details"><summary>24. \u4E24\u4E24\u4EA4\u6362\u94FE\u8868\u4E2D\u7684\u8282\u70B9</summary><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token comment"># Definition for singly-linked list.</span>
<span class="token keyword">class</span> <span class="token class-name">ListNode</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> val<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token builtin">next</span><span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>val <span class="token operator">=</span> val
        self<span class="token punctuation">.</span><span class="token builtin">next</span> <span class="token operator">=</span> <span class="token builtin">next</span>


<span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">swapPairs</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> head<span class="token punctuation">:</span> ListNode<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> ListNode<span class="token punctuation">:</span>
        <span class="token keyword">if</span> <span class="token keyword">not</span> head <span class="token keyword">or</span> <span class="token keyword">not</span> head<span class="token punctuation">.</span><span class="token builtin">next</span><span class="token punctuation">:</span>
            <span class="token keyword">return</span> head
        new_head <span class="token operator">=</span> head<span class="token punctuation">.</span><span class="token builtin">next</span>
        head<span class="token punctuation">.</span><span class="token builtin">next</span> <span class="token operator">=</span> self<span class="token punctuation">.</span>swapPairs<span class="token punctuation">(</span>new_head<span class="token punctuation">.</span><span class="token builtin">next</span><span class="token punctuation">)</span>
        new_head<span class="token punctuation">.</span><span class="token builtin">next</span> <span class="token operator">=</span> head
        <span class="token keyword">return</span> new_head

    <span class="token keyword">def</span> <span class="token function">swapPairs2</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> head<span class="token punctuation">:</span> ListNode<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> ListNode<span class="token punctuation">:</span>
        res <span class="token operator">=</span> ListNode<span class="token punctuation">(</span><span class="token builtin">next</span><span class="token operator">=</span>head<span class="token punctuation">)</span>
        pre <span class="token operator">=</span> res
        <span class="token keyword">while</span> pre<span class="token punctuation">.</span><span class="token builtin">next</span> <span class="token keyword">and</span> pre<span class="token punctuation">.</span><span class="token builtin">next</span><span class="token punctuation">.</span><span class="token builtin">next</span><span class="token punctuation">:</span>
            cur <span class="token operator">=</span> pre<span class="token punctuation">.</span><span class="token builtin">next</span>
            post <span class="token operator">=</span> pre<span class="token punctuation">.</span><span class="token builtin">next</span><span class="token punctuation">.</span><span class="token builtin">next</span>

            cur<span class="token punctuation">.</span><span class="token builtin">next</span> <span class="token operator">=</span> post<span class="token punctuation">.</span><span class="token builtin">next</span>
            post<span class="token punctuation">.</span><span class="token builtin">next</span> <span class="token operator">=</span> cur
            pre<span class="token punctuation">.</span><span class="token builtin">next</span> <span class="token operator">=</span> post
            pre <span class="token operator">=</span> pre<span class="token punctuation">.</span><span class="token builtin">next</span><span class="token punctuation">.</span><span class="token builtin">next</span>

        <span class="token keyword">return</span> res<span class="token punctuation">.</span><span class="token builtin">next</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div></details>`,1),P={id:"_25-k-\u4E2A\u4E00\u7EC4\u7FFB\u8F6C\u94FE\u8868",tabindex:"-1"},V=n("a",{class:"header-anchor",href:"#_25-k-\u4E2A\u4E00\u7EC4\u7FFB\u8F6C\u94FE\u8868","aria-hidden":"true"},"#",-1),H=s(),M={href:"https://leetcode.cn/problems/reverse-nodes-in-k-group/",target:"_blank",rel:"noopener noreferrer"},O=s("25. K \u4E2A\u4E00\u7EC4\u7FFB\u8F6C\u94FE\u8868"),G=s(" \u{1F4AF}"),R=a(`<details class="custom-container details"><summary>25. K \u4E2A\u4E00\u7EC4\u7FFB\u8F6C\u94FE\u8868</summary><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">ListNode</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> val<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token builtin">next</span><span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>val <span class="token operator">=</span> val
        self<span class="token punctuation">.</span><span class="token builtin">next</span> <span class="token operator">=</span> <span class="token builtin">next</span>


<span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">reverseKGroup</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> head<span class="token punctuation">:</span> ListNode<span class="token punctuation">,</span> k<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        start <span class="token operator">=</span> head
        end <span class="token operator">=</span> self<span class="token punctuation">.</span>get_group_end<span class="token punctuation">(</span>start<span class="token punctuation">,</span> k<span class="token punctuation">)</span>
        <span class="token keyword">if</span> end <span class="token keyword">is</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
            <span class="token keyword">return</span> head
        head <span class="token operator">=</span> end

        self<span class="token punctuation">.</span>reverse<span class="token punctuation">(</span>start<span class="token punctuation">,</span> end<span class="token punctuation">)</span>
        last_end <span class="token operator">=</span> start
        <span class="token keyword">while</span> last_end<span class="token punctuation">.</span><span class="token builtin">next</span> <span class="token operator">!=</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
            start <span class="token operator">=</span> last_end<span class="token punctuation">.</span><span class="token builtin">next</span>
            end <span class="token operator">=</span> self<span class="token punctuation">.</span>get_group_end<span class="token punctuation">(</span>start<span class="token punctuation">,</span> k<span class="token punctuation">)</span>
            <span class="token keyword">if</span> end <span class="token keyword">is</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
                <span class="token keyword">return</span> head
            self<span class="token punctuation">.</span>reverse<span class="token punctuation">(</span>start<span class="token punctuation">,</span> end<span class="token punctuation">)</span>
            last_end<span class="token punctuation">.</span><span class="token builtin">next</span> <span class="token operator">=</span> end
            last_end <span class="token operator">=</span> start
        <span class="token keyword">return</span> head

    <span class="token keyword">def</span> <span class="token function">reverse</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> start<span class="token punctuation">:</span> ListNode<span class="token punctuation">,</span> end<span class="token punctuation">:</span> ListNode<span class="token punctuation">)</span><span class="token punctuation">:</span>
        end <span class="token operator">=</span> end<span class="token punctuation">.</span><span class="token builtin">next</span>
        pre <span class="token operator">=</span> <span class="token boolean">None</span>
        cur <span class="token operator">=</span> start
        <span class="token builtin">next</span> <span class="token operator">=</span> <span class="token boolean">None</span>
        <span class="token keyword">while</span> cur <span class="token operator">!=</span> end<span class="token punctuation">:</span>
            <span class="token builtin">next</span> <span class="token operator">=</span> cur<span class="token punctuation">.</span><span class="token builtin">next</span>
            cur<span class="token punctuation">.</span><span class="token builtin">next</span> <span class="token operator">=</span> pre
            pre <span class="token operator">=</span> cur
            cur <span class="token operator">=</span> <span class="token builtin">next</span>
        start<span class="token punctuation">.</span><span class="token builtin">next</span> <span class="token operator">=</span> end

    <span class="token keyword">def</span> <span class="token function">get_group_end</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> start<span class="token punctuation">:</span> ListNode<span class="token punctuation">,</span> k<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">while</span> k <span class="token operator">!=</span> <span class="token number">0</span> <span class="token keyword">and</span> start<span class="token punctuation">:</span>
            start <span class="token operator">=</span> start<span class="token punctuation">.</span><span class="token builtin">next</span>
            k <span class="token operator">=</span> k <span class="token operator">-</span> <span class="token number">1</span>
        <span class="token keyword">return</span> start
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br></div></div></details>`,1),Y={id:"_61-\u65CB\u8F6C\u94FE\u8868",tabindex:"-1"},q=n("a",{class:"header-anchor",href:"#_61-\u65CB\u8F6C\u94FE\u8868","aria-hidden":"true"},"#",-1),J=s(),Q={href:"https://leetcode.cn/problems/rotate-list/",target:"_blank",rel:"noopener noreferrer"},U=s("61. \u65CB\u8F6C\u94FE\u8868"),W=a(`<details class="custom-container details"><summary>61. \u65CB\u8F6C\u94FE\u8868</summary><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token comment"># Definition for singly-linked list.</span>
<span class="token keyword">class</span> <span class="token class-name">ListNode</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> val<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token builtin">next</span><span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>val <span class="token operator">=</span> val
        self<span class="token punctuation">.</span><span class="token builtin">next</span> <span class="token operator">=</span> <span class="token builtin">next</span>

<span class="token comment"># \u6211\u4EEC\u53EF\u4EE5\u5C06\u94FE\u8868\u5148\u8FDE\u6210\u73AF\uFF0C\u7136\u540E\u5C06\u94FE\u8868\u5728\u6307\u5B9A\u4F4D\u7F6E\u65AD\u5F00</span>

<span class="token comment"># \u5148\u904D\u5386\u4E00\u904D\uFF0C\u6C42\u51FA\u94FE\u8868\u8282\u70B9\u4E2A\u6570 n\u3002\u6CE8\u610F\u5230 k \u53EF\u80FD\u5F88\u5927\uFF0C\u6211\u4EEC\u53EA\u9700\u5C06\u94FE\u8868\u53F3\u79FB k % n \u4E2A\u4F4D\u7F6E\u5373\u53EF\u3002</span>

<span class="token comment"># \u7B2C\u4E8C\u6B21\u904D\u5386\u5230 n - k % n \u7684\u4F4D\u7F6E\uFF0C\u8BB0\u5F55\u4E0B\u65AD\u5F00\u540E\u65B0\u94FE\u8868\u5934\u8282\u70B9\u4F4D\u7F6E\uFF0C\u518D\u5C06\u5176\u65AD\u5F00\u5E76\u8FD4\u56DE\u65B0\u7684\u5934\u8282\u70B9\u3002</span>


<span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">rotateRight</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> head<span class="token punctuation">:</span> ListNode<span class="token punctuation">,</span> k<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> ListNode<span class="token punctuation">:</span>
        <span class="token keyword">if</span> k <span class="token operator">==</span> <span class="token number">0</span> <span class="token keyword">or</span> <span class="token keyword">not</span> head <span class="token keyword">or</span> <span class="token keyword">not</span> head<span class="token punctuation">.</span><span class="token builtin">next</span><span class="token punctuation">:</span>
            <span class="token keyword">return</span> head
        n <span class="token operator">=</span> <span class="token number">1</span>
        cur <span class="token operator">=</span> head
        <span class="token comment"># \u904D\u5386\u51FA\u94FE\u8868\u7684\u957F\u5EA6</span>
        <span class="token keyword">while</span> cur<span class="token punctuation">.</span><span class="token builtin">next</span><span class="token punctuation">:</span>
            cur <span class="token operator">=</span> cur<span class="token punctuation">.</span><span class="token builtin">next</span>
            n <span class="token operator">+=</span> <span class="token number">1</span>

        cut <span class="token operator">=</span> n <span class="token operator">-</span> k <span class="token operator">%</span> n
        cur<span class="token punctuation">.</span><span class="token builtin">next</span> <span class="token operator">=</span> head
        <span class="token keyword">while</span> cut<span class="token punctuation">:</span>
            cut <span class="token operator">-=</span> <span class="token number">1</span>
            cur <span class="token operator">=</span> cur<span class="token punctuation">.</span><span class="token builtin">next</span>
        new_head <span class="token operator">=</span> cur<span class="token punctuation">.</span><span class="token builtin">next</span>
        cur<span class="token punctuation">.</span><span class="token builtin">next</span> <span class="token operator">=</span> <span class="token boolean">None</span>
        <span class="token keyword">return</span> new_head
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br></div></div></details>`,1),X={id:"_82-\u5220\u9664\u6392\u5E8F\u94FE\u8868\u4E2D\u7684\u91CD\u590D\u5143\u7D20-ii",tabindex:"-1"},Z=n("a",{class:"header-anchor",href:"#_82-\u5220\u9664\u6392\u5E8F\u94FE\u8868\u4E2D\u7684\u91CD\u590D\u5143\u7D20-ii","aria-hidden":"true"},"#",-1),$=s(),nn={href:"https://leetcode.cn/problems/remove-duplicates-from-sorted-list-ii/",target:"_blank",rel:"noopener noreferrer"},sn=s("82. \u5220\u9664\u6392\u5E8F\u94FE\u8868\u4E2D\u7684\u91CD\u590D\u5143\u7D20 II"),an=s(" \u{1F4AF}"),pn=a(`<details class="custom-container details"><summary>82. \u5220\u9664\u6392\u5E8F\u94FE\u8868\u4E2D\u7684\u91CD\u590D\u5143\u7D20 II</summary><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token comment"># Definition for singly-linked list.</span>
<span class="token keyword">class</span> <span class="token class-name">ListNode</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> val<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token builtin">next</span><span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>val <span class="token operator">=</span> val
        self<span class="token punctuation">.</span><span class="token builtin">next</span> <span class="token operator">=</span> <span class="token builtin">next</span>


<span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">deleteDuplicates</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> head<span class="token punctuation">:</span> ListNode<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> ListNode<span class="token punctuation">:</span>
        <span class="token keyword">if</span> <span class="token keyword">not</span> head<span class="token punctuation">:</span>
            <span class="token keyword">return</span> head

        <span class="token comment"># dummy = ListNode(0)</span>
        <span class="token comment"># dummy.next = head</span>
        dummy <span class="token operator">=</span> ListNode<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> head<span class="token punctuation">)</span>

        pre <span class="token operator">=</span> dummy
        cur <span class="token operator">=</span> head
        <span class="token keyword">while</span> cur<span class="token punctuation">:</span>
            <span class="token comment"># \u8DF3\u8FC7\u5F53\u524D\u7684\u91CD\u590D\u8282\u70B9\uFF0C\u4F7F\u5F97cur\u6307\u5411\u5F53\u524D\u91CD\u590D\u5143\u7D20\u7684\u6700\u540E\u4E00\u4E2A\u4F4D\u7F6E</span>
            <span class="token keyword">while</span> cur<span class="token punctuation">.</span><span class="token builtin">next</span> <span class="token keyword">and</span> cur<span class="token punctuation">.</span>val <span class="token operator">==</span> cur<span class="token punctuation">.</span><span class="token builtin">next</span><span class="token punctuation">.</span>val<span class="token punctuation">:</span>
                cur <span class="token operator">=</span> cur<span class="token punctuation">.</span><span class="token builtin">next</span>
            <span class="token keyword">if</span> pre<span class="token punctuation">.</span><span class="token builtin">next</span> <span class="token operator">==</span> cur<span class="token punctuation">:</span>
                <span class="token comment"># pre\u548Ccur\u4E4B\u95F4\u6CA1\u6709\u91CD\u590D\u8282\u70B9\uFF0Cpre\u540E\u79FB</span>
                pre <span class="token operator">=</span> pre<span class="token punctuation">.</span><span class="token builtin">next</span>
            <span class="token keyword">else</span><span class="token punctuation">:</span>
                <span class="token comment"># pre-&gt;next\u6307\u5411cur\u7684\u4E0B\u4E00\u4E2A\u4F4D\u7F6E\uFF08\u76F8\u5F53\u4E8E\u8DF3\u8FC7\u4E86\u5F53\u524D\u7684\u91CD\u590D\u5143\u7D20\uFF09</span>
                <span class="token comment"># \u4F46\u662Fpre\u4E0D\u79FB\u52A8\uFF0C\u4ECD\u7136\u6307\u5411\u5DF2\u7ECF\u904D\u5386\u7684\u94FE\u8868\u7ED3\u5C3E</span>
                pre<span class="token punctuation">.</span><span class="token builtin">next</span> <span class="token operator">=</span> cur<span class="token punctuation">.</span><span class="token builtin">next</span>
            cur <span class="token operator">=</span> cur<span class="token punctuation">.</span><span class="token builtin">next</span>
        <span class="token keyword">return</span> dummy<span class="token punctuation">.</span><span class="token builtin">next</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br></div></div></details>`,1),en={id:"_83-\u5220\u9664\u6392\u5E8F\u94FE\u8868\u4E2D\u7684\u91CD\u590D\u5143\u7D20",tabindex:"-1"},tn=n("a",{class:"header-anchor",href:"#_83-\u5220\u9664\u6392\u5E8F\u94FE\u8868\u4E2D\u7684\u91CD\u590D\u5143\u7D20","aria-hidden":"true"},"#",-1),on=s(),ln={href:"https://leetcode.cn/problems/remove-duplicates-from-sorted-list/",target:"_blank",rel:"noopener noreferrer"},cn=s("83. \u5220\u9664\u6392\u5E8F\u94FE\u8868\u4E2D\u7684\u91CD\u590D\u5143\u7D20"),rn=a(`<details class="custom-container details"><summary>83. \u5220\u9664\u6392\u5E8F\u94FE\u8868\u4E2D\u7684\u91CD\u590D\u5143\u7D20</summary><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token comment"># Definition for singly-linked list.</span>
<span class="token keyword">class</span> <span class="token class-name">ListNode</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> val<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token builtin">next</span><span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>val <span class="token operator">=</span> val
        self<span class="token punctuation">.</span><span class="token builtin">next</span> <span class="token operator">=</span> <span class="token builtin">next</span>


<span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">deleteDuplicates</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> head<span class="token punctuation">:</span> ListNode<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> ListNode<span class="token punctuation">:</span>
        <span class="token keyword">if</span> <span class="token keyword">not</span> head<span class="token punctuation">:</span>
            <span class="token keyword">return</span> head
        cur <span class="token operator">=</span> head
        <span class="token keyword">while</span> cur<span class="token punctuation">.</span><span class="token builtin">next</span><span class="token punctuation">:</span>
            <span class="token keyword">if</span> cur<span class="token punctuation">.</span>val <span class="token operator">==</span> cur<span class="token punctuation">.</span><span class="token builtin">next</span><span class="token punctuation">.</span>val<span class="token punctuation">:</span>
                cur<span class="token punctuation">.</span><span class="token builtin">next</span> <span class="token operator">=</span> cur<span class="token punctuation">.</span><span class="token builtin">next</span><span class="token punctuation">.</span><span class="token builtin">next</span>
            <span class="token keyword">else</span><span class="token punctuation">:</span>
                cur <span class="token operator">=</span> cur<span class="token punctuation">.</span><span class="token builtin">next</span>
        <span class="token keyword">return</span> head
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div></details>`,1),un={id:"_86-\u5206\u9694\u94FE\u8868",tabindex:"-1"},kn=n("a",{class:"header-anchor",href:"#_86-\u5206\u9694\u94FE\u8868","aria-hidden":"true"},"#",-1),bn=s(),dn={href:"https://leetcode.cn/problems/partition-list/",target:"_blank",rel:"noopener noreferrer"},mn=s("86. \u5206\u9694\u94FE\u8868"),hn=a(`<details class="custom-container details"><summary>86. \u5206\u9694\u94FE\u8868</summary><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">ListNode</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> val<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token builtin">next</span><span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>val <span class="token operator">=</span> val
        self<span class="token punctuation">.</span><span class="token builtin">next</span> <span class="token operator">=</span> <span class="token builtin">next</span>


<span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">partition</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> head<span class="token punctuation">:</span> ListNode<span class="token punctuation">,</span> x<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> ListNode<span class="token punctuation">:</span>
        small <span class="token operator">=</span> ListNode<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
        large <span class="token operator">=</span> ListNode<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
        small_head <span class="token operator">=</span> small
        large_head <span class="token operator">=</span> large
        <span class="token keyword">while</span> head<span class="token punctuation">:</span>
            <span class="token keyword">if</span> head<span class="token punctuation">.</span>val <span class="token operator">&lt;</span> x<span class="token punctuation">:</span>
                small<span class="token punctuation">.</span><span class="token builtin">next</span> <span class="token operator">=</span> head
                small <span class="token operator">=</span> small<span class="token punctuation">.</span><span class="token builtin">next</span>
            <span class="token keyword">else</span><span class="token punctuation">:</span>
                large<span class="token punctuation">.</span><span class="token builtin">next</span> <span class="token operator">=</span> head
                large <span class="token operator">=</span> large<span class="token punctuation">.</span><span class="token builtin">next</span>
            head <span class="token operator">=</span> head<span class="token punctuation">.</span><span class="token builtin">next</span>
        large<span class="token punctuation">.</span><span class="token builtin">next</span> <span class="token operator">=</span> <span class="token boolean">None</span>
        small<span class="token punctuation">.</span><span class="token builtin">next</span> <span class="token operator">=</span> large_head<span class="token punctuation">.</span><span class="token builtin">next</span>
        <span class="token keyword">return</span> small_head<span class="token punctuation">.</span><span class="token builtin">next</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div></details>`,1),_n={id:"_92-\u53CD\u8F6C\u94FE\u8868-ii",tabindex:"-1"},yn=n("a",{class:"header-anchor",href:"#_92-\u53CD\u8F6C\u94FE\u8868-ii","aria-hidden":"true"},"#",-1),fn=s(),wn={href:"https://leetcode.cn/problems/reverse-linked-list-ii/",target:"_blank",rel:"noopener noreferrer"},xn=s("92. \u53CD\u8F6C\u94FE\u8868 II"),vn=a(`<details class="custom-container details"><summary>92. \u53CD\u8F6C\u94FE\u8868 II</summary><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token comment"># Definition for singly-linked list.</span>
<span class="token keyword">class</span> <span class="token class-name">ListNode</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> val<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token builtin">next</span><span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>val <span class="token operator">=</span> val
        self<span class="token punctuation">.</span><span class="token builtin">next</span> <span class="token operator">=</span> <span class="token builtin">next</span>

<span class="token comment"># \u7B2C 1 \u6B65\uFF1A\u5148\u5C06\u5F85\u53CD\u8F6C\u7684\u533A\u57DF\u53CD\u8F6C</span>
<span class="token comment"># \u7B2C 2 \u6B65\uFF1A\u628A pre \u7684 next \u6307\u9488\u6307\u5411\u53CD\u8F6C\u4EE5\u540E\u7684\u94FE\u8868\u5934\u8282\u70B9\uFF0C\u628A\u53CD\u8F6C\u4EE5\u540E\u7684\u94FE\u8868\u7684\u5C3E\u8282\u70B9\u7684 next \u6307\u9488\u6307\u5411 succ</span>


<span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">reverseBetween</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> head<span class="token punctuation">:</span> ListNode<span class="token punctuation">,</span> left<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">,</span> right<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> ListNode<span class="token punctuation">:</span>
        <span class="token keyword">def</span> <span class="token function">reverse</span><span class="token punctuation">(</span>head<span class="token punctuation">:</span> ListNode<span class="token punctuation">)</span><span class="token punctuation">:</span>
            pre <span class="token operator">=</span> <span class="token boolean">None</span>
            cur <span class="token operator">=</span> head
            <span class="token keyword">while</span> cur<span class="token punctuation">:</span>
                temp <span class="token operator">=</span> cur<span class="token punctuation">.</span><span class="token builtin">next</span>
                cur<span class="token punctuation">.</span><span class="token builtin">next</span> <span class="token operator">=</span> pre
                pre <span class="token operator">=</span> cur
                cur <span class="token operator">=</span> temp

        dummy <span class="token operator">=</span> ListNode<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
        dummy<span class="token punctuation">.</span><span class="token builtin">next</span> <span class="token operator">=</span> head
        pre <span class="token operator">=</span> dummy
        <span class="token comment"># \u7B2C 1 \u6B65\uFF1A\u4ECE\u865A\u62DF\u5934\u8282\u70B9\u8D70 left - 1 \u6B65\uFF0C\u6765\u5230 left \u8282\u70B9\u7684\u524D\u4E00\u4E2A\u8282\u70B9</span>
        <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>left <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            pre <span class="token operator">=</span> pre<span class="token punctuation">.</span><span class="token builtin">next</span>
        <span class="token comment"># \u7B2C 2 \u6B65\uFF1A\u4ECE pre \u518D\u8D70 right - left + 1 \u6B65\uFF0C\u6765\u5230 right \u8282\u70B9</span>
        right_node <span class="token operator">=</span> pre
        <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>right <span class="token operator">-</span> left <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            right_node <span class="token operator">=</span> right_node<span class="token punctuation">.</span><span class="token builtin">next</span>
        <span class="token comment"># \u7B2C 3 \u6B65\uFF1A\u5207\u65AD\u51FA\u4E00\u4E2A\u5B50\u94FE\u8868\uFF08\u622A\u53D6\u94FE\u8868\uFF09</span>
        left_node <span class="token operator">=</span> pre<span class="token punctuation">.</span><span class="token builtin">next</span>
        cur <span class="token operator">=</span> right_node<span class="token punctuation">.</span><span class="token builtin">next</span>
        <span class="token comment"># \u5207\u65AD\u94FE\u63A5</span>
        pre<span class="token punctuation">.</span><span class="token builtin">next</span> <span class="token operator">=</span> <span class="token boolean">None</span>
        right_node<span class="token punctuation">.</span><span class="token builtin">next</span> <span class="token operator">=</span> <span class="token boolean">None</span>
        <span class="token comment"># \u7B2C 4 \u6B65\uFF1A\u540C\u7B2C 206 \u9898\uFF0C\u53CD\u8F6C\u94FE\u8868\u7684\u5B50\u533A\u95F4</span>
        reverse<span class="token punctuation">(</span>left_node<span class="token punctuation">)</span>
        <span class="token comment"># \u7B2C 5 \u6B65\uFF1A\u63A5\u56DE\u5230\u539F\u6765\u7684\u94FE\u8868\u4E2D</span>
        pre<span class="token punctuation">.</span><span class="token builtin">next</span> <span class="token operator">=</span> right_node
        left_node<span class="token punctuation">.</span><span class="token builtin">next</span> <span class="token operator">=</span> cur
        <span class="token keyword">return</span> dummy<span class="token punctuation">.</span><span class="token builtin">next</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br></div></div></details>`,1),gn={id:"_141-\u73AF\u5F62\u94FE\u8868",tabindex:"-1"},Nn=n("a",{class:"header-anchor",href:"#_141-\u73AF\u5F62\u94FE\u8868","aria-hidden":"true"},"#",-1),Ln=s(),Sn={href:"https://leetcode.cn/problems/linked-list-cycle/",target:"_blank",rel:"noopener noreferrer"},In=s("141. \u73AF\u5F62\u94FE\u8868"),Dn=a(`<details class="custom-container details"><summary>141. \u73AF\u5F62\u94FE\u8868</summary><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token comment"># Definition for singly-linked list.</span>
<span class="token keyword">class</span> <span class="token class-name">ListNode</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>val <span class="token operator">=</span> x
        self<span class="token punctuation">.</span><span class="token builtin">next</span> <span class="token operator">=</span> <span class="token boolean">None</span>


<span class="token comment"># \u54C8\u5E0C\u8868\u65B9\u5F0F\uFF0C\u904D\u5386\u8BBF\u95EE\u7ED3\u70B9\uFF0C\u5E76\u5224\u65AD\u662F\u5426\u5728\u54C8\u5E0C\u8868\u4E2D</span>
<span class="token comment"># \u5FEB\u6162\u6307\u9488\u65B9\u5F0F\uFF0C\u4E24\u4E2A\u6307\u9488\u76F8\u9047\u5C31\u8BF4\u660E\u6709\u73AF</span>

<span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">hasCycle</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> head<span class="token punctuation">:</span> ListNode<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token builtin">bool</span><span class="token punctuation">:</span>
        <span class="token comment"># \u5FEB\u6162\u6307\u9488\u521D\u59CB\u5316\u6307\u5411 head</span>
        slow <span class="token operator">=</span> fast <span class="token operator">=</span> head
        <span class="token comment"># \u5FEB\u6307\u9488\u8D70\u5230\u672B\u5C3E\u65F6\u505C\u6B62</span>
        <span class="token keyword">while</span> fast <span class="token keyword">and</span> fast<span class="token punctuation">.</span><span class="token builtin">next</span><span class="token punctuation">:</span>
            <span class="token comment"># \u6162\u6307\u9488\u8D70\u4E00\u6B65\uFF0C\u5FEB\u6307\u9488\u8D70\u4E24\u6B65</span>
            slow <span class="token operator">=</span> slow<span class="token punctuation">.</span><span class="token builtin">next</span>
            fast <span class="token operator">=</span> fast<span class="token punctuation">.</span><span class="token builtin">next</span><span class="token punctuation">.</span><span class="token builtin">next</span>
            <span class="token comment"># \u5FEB\u6162\u6307\u9488\u76F8\u9047\uFF0C\u8BF4\u660E\u542B\u6709\u73AF</span>
            <span class="token keyword">if</span> slow <span class="token operator">==</span> fast<span class="token punctuation">:</span>
                <span class="token keyword">return</span> <span class="token boolean">True</span>
        <span class="token keyword">return</span> <span class="token boolean">False</span>

    <span class="token keyword">def</span> <span class="token function">hasCycle2</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> head<span class="token punctuation">:</span> ListNode<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token builtin">bool</span><span class="token punctuation">:</span>
        visted <span class="token operator">=</span> <span class="token builtin">set</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">while</span> head<span class="token punctuation">:</span>
            <span class="token keyword">if</span> head <span class="token keyword">in</span> visted<span class="token punctuation">:</span>
                <span class="token keyword">return</span> <span class="token boolean">True</span>
            visted<span class="token punctuation">.</span>add<span class="token punctuation">(</span>head<span class="token punctuation">)</span>
            head <span class="token operator">=</span> head<span class="token punctuation">.</span><span class="token builtin">next</span>
        <span class="token keyword">return</span> <span class="token boolean">False</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br></div></div></details>`,1),An={id:"_142-\u73AF\u5F62\u94FE\u8868-ii",tabindex:"-1"},Bn=n("a",{class:"header-anchor",href:"#_142-\u73AF\u5F62\u94FE\u8868-ii","aria-hidden":"true"},"#",-1),zn=s(),En={href:"https://leetcode.cn/problems/linked-list-cycle-ii/",target:"_blank",rel:"noopener noreferrer"},Fn=s("142. \u73AF\u5F62\u94FE\u8868 II"),Tn=a(`<details class="custom-container details"><summary>142. \u73AF\u5F62\u94FE\u8868 II</summary><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token comment"># Definition for singly-linked list.</span>
<span class="token keyword">class</span> <span class="token class-name">ListNode</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>val <span class="token operator">=</span> x
        self<span class="token punctuation">.</span><span class="token builtin">next</span> <span class="token operator">=</span> <span class="token boolean">None</span>


<span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">detectCycle</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> head<span class="token punctuation">:</span> ListNode<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> ListNode<span class="token punctuation">:</span>
        <span class="token comment"># \u5FEB\u6162\u6307\u9488\u521D\u59CB\u5316\u6307\u5411 head</span>
        slow <span class="token operator">=</span> fast <span class="token operator">=</span> head
        <span class="token keyword">while</span> fast <span class="token keyword">and</span> fast<span class="token punctuation">.</span><span class="token builtin">next</span><span class="token punctuation">:</span>
            <span class="token comment"># \u6162\u6307\u9488\u8D70\u4E00\u6B65\uFF0C\u5FEB\u6307\u9488\u8D70\u4E24\u6B65</span>
            slow <span class="token operator">=</span> slow<span class="token punctuation">.</span><span class="token builtin">next</span>
            fast <span class="token operator">=</span> fast<span class="token punctuation">.</span><span class="token builtin">next</span><span class="token punctuation">.</span><span class="token builtin">next</span>
            <span class="token comment"># \u5FEB\u6162\u6307\u9488\u76F8\u9047\uFF0C\u8BF4\u660E\u542B\u6709\u73AF</span>
            <span class="token keyword">if</span> slow <span class="token operator">==</span> fast<span class="token punctuation">:</span>
                <span class="token keyword">break</span>
        <span class="token comment"># fast \u9047\u5230\u7A7A\u6307\u9488\u8BF4\u660E\u6CA1\u6709\u73AF</span>
        <span class="token keyword">if</span> fast <span class="token keyword">is</span> <span class="token boolean">None</span> <span class="token keyword">or</span> fast<span class="token punctuation">.</span><span class="token builtin">next</span> <span class="token keyword">is</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
            <span class="token keyword">return</span> <span class="token boolean">None</span>
        slow <span class="token operator">=</span> head
        <span class="token comment"># \u5FEB\u6162\u6307\u9488\u540C\u6B65\u524D\u8FDB\uFF0C\u76F8\u4EA4\u70B9\u5C31\u662F\u73AF\u8D77\u70B9</span>
        <span class="token keyword">while</span> slow <span class="token operator">!=</span> fast<span class="token punctuation">:</span>
            slow <span class="token operator">=</span> slow<span class="token punctuation">.</span><span class="token builtin">next</span>
            fast <span class="token operator">=</span> fast<span class="token punctuation">.</span><span class="token builtin">next</span>
        <span class="token keyword">return</span> slow
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div></details>`,1),jn={id:"_147-\u5BF9\u94FE\u8868\u8FDB\u884C\u63D2\u5165\u6392\u5E8F",tabindex:"-1"},Cn=n("a",{class:"header-anchor",href:"#_147-\u5BF9\u94FE\u8868\u8FDB\u884C\u63D2\u5165\u6392\u5E8F","aria-hidden":"true"},"#",-1),Kn=s(),Pn={href:"https://leetcode.cn/problems/insertion-sort-list/",target:"_blank",rel:"noopener noreferrer"},Vn=s("147. \u5BF9\u94FE\u8868\u8FDB\u884C\u63D2\u5165\u6392\u5E8F"),Hn=a(`<details class="custom-container details"><summary>147. \u5BF9\u94FE\u8868\u8FDB\u884C\u63D2\u5165\u6392\u5E8F</summary><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token comment"># Definition for singly-linked list.</span>
<span class="token keyword">class</span> <span class="token class-name">ListNode</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> val<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token builtin">next</span><span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>val <span class="token operator">=</span> val
        self<span class="token punctuation">.</span><span class="token builtin">next</span> <span class="token operator">=</span> <span class="token builtin">next</span>


<span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">insertionSortList</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> head<span class="token punctuation">:</span> ListNode<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> ListNode<span class="token punctuation">:</span>
        <span class="token keyword">if</span> <span class="token keyword">not</span> head<span class="token punctuation">:</span>
            <span class="token keyword">return</span> head

        dummy <span class="token operator">=</span> ListNode<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
        dummy<span class="token punctuation">.</span><span class="token builtin">next</span> <span class="token operator">=</span> head
        last_sorted <span class="token operator">=</span> head
        cur <span class="token operator">=</span> head<span class="token punctuation">.</span><span class="token builtin">next</span>
        <span class="token keyword">while</span> cur<span class="token punctuation">:</span>
            <span class="token keyword">if</span> last_sorted<span class="token punctuation">.</span>val <span class="token operator">&lt;=</span> cur<span class="token punctuation">.</span>val<span class="token punctuation">:</span>
                last_sorted <span class="token operator">=</span> last_sorted<span class="token punctuation">.</span><span class="token builtin">next</span>
            <span class="token keyword">else</span><span class="token punctuation">:</span>
                prev <span class="token operator">=</span> dummy
                <span class="token keyword">while</span> prev<span class="token punctuation">.</span><span class="token builtin">next</span><span class="token punctuation">.</span>val <span class="token operator">&lt;=</span> cur<span class="token punctuation">.</span>val<span class="token punctuation">:</span>
                    prev <span class="token operator">=</span> prev<span class="token punctuation">.</span><span class="token builtin">next</span>
                last_sorted<span class="token punctuation">.</span><span class="token builtin">next</span> <span class="token operator">=</span> cur<span class="token punctuation">.</span><span class="token builtin">next</span>
                cur<span class="token punctuation">.</span><span class="token builtin">next</span> <span class="token operator">=</span> prev<span class="token punctuation">.</span><span class="token builtin">next</span>
                prev<span class="token punctuation">.</span><span class="token builtin">next</span> <span class="token operator">=</span> cur
            cur <span class="token operator">=</span> last_sorted<span class="token punctuation">.</span><span class="token builtin">next</span>
        <span class="token keyword">return</span> dummy<span class="token punctuation">.</span><span class="token builtin">next</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div></details>`,1),Mn={id:"_148-\u6392\u5E8F\u94FE\u8868",tabindex:"-1"},On=n("a",{class:"header-anchor",href:"#_148-\u6392\u5E8F\u94FE\u8868","aria-hidden":"true"},"#",-1),Gn=s(),Rn={href:"https://leetcode.cn/problems/sort-list/",target:"_blank",rel:"noopener noreferrer"},Yn=s("148. \u6392\u5E8F\u94FE\u8868"),qn=a(`<details class="custom-container details"><summary>148. \u6392\u5E8F\u94FE\u8868</summary><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token comment"># Definition for singly-linked list.</span>
<span class="token keyword">class</span> <span class="token class-name">ListNode</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> val<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token builtin">next</span><span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>val <span class="token operator">=</span> val
        self<span class="token punctuation">.</span><span class="token builtin">next</span> <span class="token operator">=</span> <span class="token builtin">next</span>


<span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">sortList</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> head<span class="token punctuation">:</span> ListNode<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> ListNode<span class="token punctuation">:</span>
        <span class="token keyword">pass</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div></details>`,1),Jn={id:"_160-\u76F8\u4EA4\u94FE\u8868",tabindex:"-1"},Qn=n("a",{class:"header-anchor",href:"#_160-\u76F8\u4EA4\u94FE\u8868","aria-hidden":"true"},"#",-1),Un=s(),Wn={href:"https://leetcode.cn/problems/intersection-of-two-linked-lists/",target:"_blank",rel:"noopener noreferrer"},Xn=s("160. \u76F8\u4EA4\u94FE\u8868"),Zn=a(`<details class="custom-container details"><summary>160. \u76F8\u4EA4\u94FE\u8868</summary><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token comment"># Definition for singly-linked list.</span>
<span class="token keyword">class</span> <span class="token class-name">ListNode</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>val <span class="token operator">=</span> x
        self<span class="token punctuation">.</span><span class="token builtin">next</span> <span class="token operator">=</span> <span class="token boolean">None</span>


<span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">getIntersectionNode</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> headA<span class="token punctuation">:</span> ListNode<span class="token punctuation">,</span> headB<span class="token punctuation">:</span> ListNode<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> ListNode<span class="token punctuation">:</span>
        <span class="token keyword">if</span> <span class="token keyword">not</span> headA <span class="token keyword">or</span> <span class="token keyword">not</span> headB<span class="token punctuation">:</span>
            <span class="token keyword">return</span> <span class="token boolean">None</span>
        pa <span class="token operator">=</span> headA
        pb <span class="token operator">=</span> headB
        <span class="token keyword">while</span> pa <span class="token operator">!=</span> pb<span class="token punctuation">:</span>
            <span class="token keyword">if</span> <span class="token keyword">not</span> pa<span class="token punctuation">:</span>
                pa <span class="token operator">=</span> headB
            <span class="token keyword">else</span><span class="token punctuation">:</span>
                pa <span class="token operator">=</span> pa<span class="token punctuation">.</span><span class="token builtin">next</span>
            <span class="token keyword">if</span> <span class="token keyword">not</span> pb<span class="token punctuation">:</span>
                pb <span class="token operator">=</span> headA
            <span class="token keyword">else</span><span class="token punctuation">:</span>
                pb <span class="token operator">=</span> pb<span class="token punctuation">.</span><span class="token builtin">next</span>
        <span class="token keyword">return</span> pa
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div></details>`,1),$n={id:"_203-\u79FB\u9664\u94FE\u8868\u5143\u7D20",tabindex:"-1"},ns=n("a",{class:"header-anchor",href:"#_203-\u79FB\u9664\u94FE\u8868\u5143\u7D20","aria-hidden":"true"},"#",-1),ss=s(),as={href:"https://leetcode.cn/problems/remove-linked-list-elements/",target:"_blank",rel:"noopener noreferrer"},ps=s("203. \u79FB\u9664\u94FE\u8868\u5143\u7D20"),es=a(`<details class="custom-container details"><summary>203. \u79FB\u9664\u94FE\u8868\u5143\u7D20</summary><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">ListNode</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> val<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token builtin">next</span><span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>val <span class="token operator">=</span> val
        self<span class="token punctuation">.</span><span class="token builtin">next</span> <span class="token operator">=</span> <span class="token builtin">next</span>


<span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">removeElements</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> head<span class="token punctuation">:</span> ListNode<span class="token punctuation">,</span> val<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> ListNode<span class="token punctuation">:</span>
        dummy_head <span class="token operator">=</span> ListNode<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token builtin">next</span><span class="token operator">=</span>head<span class="token punctuation">)</span>
        cur <span class="token operator">=</span> dummy_head
        <span class="token keyword">while</span> cur<span class="token punctuation">.</span><span class="token builtin">next</span><span class="token punctuation">:</span>
            <span class="token keyword">if</span> cur<span class="token punctuation">.</span><span class="token builtin">next</span><span class="token punctuation">.</span>val <span class="token operator">==</span> val<span class="token punctuation">:</span>
                cur<span class="token punctuation">.</span><span class="token builtin">next</span> <span class="token operator">=</span> cur<span class="token punctuation">.</span><span class="token builtin">next</span><span class="token punctuation">.</span><span class="token builtin">next</span>
            <span class="token keyword">else</span><span class="token punctuation">:</span>
                cur <span class="token operator">=</span> cur<span class="token punctuation">.</span><span class="token builtin">next</span>
        <span class="token keyword">return</span> dummy_head<span class="token punctuation">.</span><span class="token builtin">next</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div></details>`,1),ts={id:"_206-\u53CD\u8F6C\u94FE\u8868",tabindex:"-1"},os=n("a",{class:"header-anchor",href:"#_206-\u53CD\u8F6C\u94FE\u8868","aria-hidden":"true"},"#",-1),ls=s(),cs={href:"https://leetcode.cn/problems/reverse-linked-list/description/",target:"_blank",rel:"noopener noreferrer"},rs=s("206. \u53CD\u8F6C\u94FE\u8868"),is=s(" \u{1F4AF}"),us=a(`<details class="custom-container details"><summary>206. \u53CD\u8F6C\u94FE\u8868</summary><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token comment"># Definition for singly-linked list.</span>
<span class="token keyword">class</span> <span class="token class-name">ListNode</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> val<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token builtin">next</span><span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>val <span class="token operator">=</span> val
        self<span class="token punctuation">.</span><span class="token builtin">next</span> <span class="token operator">=</span> <span class="token builtin">next</span>


<span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">reverseList</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> head<span class="token punctuation">:</span> ListNode<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> ListNode<span class="token punctuation">:</span>
        pre <span class="token operator">=</span> <span class="token boolean">None</span>
        cur <span class="token operator">=</span> <span class="token boolean">None</span>
        <span class="token keyword">while</span> head<span class="token punctuation">:</span>
            cur <span class="token operator">=</span> head<span class="token punctuation">.</span><span class="token builtin">next</span>  <span class="token comment"># \u6293\u624B</span>
            head<span class="token punctuation">.</span><span class="token builtin">next</span> <span class="token operator">=</span> pre  <span class="token comment"># \u53CD\u8F6C</span>
            pre <span class="token operator">=</span> head
            head <span class="token operator">=</span> cur      <span class="token comment"># \u5F80\u4E0B\u8D70</span>
        <span class="token keyword">return</span> pre
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div></details>`,1),ks={id:"_234-\u56DE\u6587\u94FE\u8868",tabindex:"-1"},bs=n("a",{class:"header-anchor",href:"#_234-\u56DE\u6587\u94FE\u8868","aria-hidden":"true"},"#",-1),ds=s(),ms={href:"https://leetcode.cn/problems/palindrome-linked-list/",target:"_blank",rel:"noopener noreferrer"},hs=s("234. \u56DE\u6587\u94FE\u8868"),_s=a(`<details class="custom-container details"><summary>234. \u56DE\u6587\u94FE\u8868</summary><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token comment"># Definition for singly-linked list.</span>
<span class="token keyword">class</span> <span class="token class-name">ListNode</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> val<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token builtin">next</span><span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>val <span class="token operator">=</span> val
        self<span class="token punctuation">.</span><span class="token builtin">next</span> <span class="token operator">=</span> <span class="token builtin">next</span>


<span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">isPalindrome</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> head<span class="token punctuation">:</span> ListNode<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token builtin">bool</span><span class="token punctuation">:</span>
        stack <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
        cur <span class="token operator">=</span> head
        <span class="token keyword">while</span> cur<span class="token punctuation">:</span>
            stack<span class="token punctuation">.</span>append<span class="token punctuation">(</span>cur<span class="token punctuation">)</span>
            cur <span class="token operator">=</span> cur<span class="token punctuation">.</span><span class="token builtin">next</span>
        <span class="token keyword">while</span> stack<span class="token punctuation">:</span>
            xxx <span class="token operator">=</span> stack<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token keyword">if</span> xxx<span class="token punctuation">.</span>val <span class="token operator">!=</span> head<span class="token punctuation">.</span>val<span class="token punctuation">:</span>
                <span class="token keyword">return</span> <span class="token boolean">False</span>
            head <span class="token operator">=</span> head<span class="token punctuation">.</span><span class="token builtin">next</span>
        <span class="token keyword">return</span> <span class="token boolean">True</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div></details>`,1),ys={id:"_328-\u5947\u5076\u94FE\u8868",tabindex:"-1"},fs=n("a",{class:"header-anchor",href:"#_328-\u5947\u5076\u94FE\u8868","aria-hidden":"true"},"#",-1),ws=s(),xs={href:"https://leetcode.cn/problems/odd-even-linked-list/",target:"_blank",rel:"noopener noreferrer"},vs=s("328. \u5947\u5076\u94FE\u8868"),gs=a(`<details class="custom-container details"><summary>328. \u5947\u5076\u94FE\u8868</summary><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token comment"># Definition for singly-linked list.</span>
<span class="token keyword">class</span> <span class="token class-name">ListNode</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> val<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token builtin">next</span><span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>val <span class="token operator">=</span> val
        self<span class="token punctuation">.</span><span class="token builtin">next</span> <span class="token operator">=</span> <span class="token builtin">next</span>


<span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">oddEvenList</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> head<span class="token punctuation">:</span> ListNode<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> ListNode<span class="token punctuation">:</span>
        <span class="token keyword">if</span> <span class="token keyword">not</span> head <span class="token keyword">or</span> <span class="token keyword">not</span> head<span class="token punctuation">.</span><span class="token builtin">next</span> <span class="token keyword">or</span> <span class="token keyword">not</span> head<span class="token punctuation">.</span><span class="token builtin">next</span><span class="token punctuation">.</span><span class="token builtin">next</span><span class="token punctuation">:</span>
            <span class="token keyword">return</span> head

        even_head <span class="token operator">=</span> head<span class="token punctuation">.</span><span class="token builtin">next</span>
        odd <span class="token operator">=</span> head  <span class="token comment"># \u5947</span>
        even <span class="token operator">=</span> even_head  <span class="token comment"># \u5076</span>

        <span class="token keyword">while</span> even <span class="token keyword">and</span> even<span class="token punctuation">.</span><span class="token builtin">next</span><span class="token punctuation">:</span>
            odd<span class="token punctuation">.</span><span class="token builtin">next</span> <span class="token operator">=</span> even<span class="token punctuation">.</span><span class="token builtin">next</span>
            odd <span class="token operator">=</span> odd<span class="token punctuation">.</span><span class="token builtin">next</span>
            even<span class="token punctuation">.</span><span class="token builtin">next</span> <span class="token operator">=</span> odd<span class="token punctuation">.</span><span class="token builtin">next</span>
            even <span class="token operator">=</span> even<span class="token punctuation">.</span><span class="token builtin">next</span>

        odd<span class="token punctuation">.</span><span class="token builtin">next</span> <span class="token operator">=</span> even_head
        <span class="token keyword">return</span> head
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div></details>`,1),Ns={id:"_707-\u8BBE\u8BA1\u94FE\u8868",tabindex:"-1"},Ls=n("a",{class:"header-anchor",href:"#_707-\u8BBE\u8BA1\u94FE\u8868","aria-hidden":"true"},"#",-1),Ss=s(),Is={href:"https://leetcode.cn/problems/design-linked-list/",target:"_blank",rel:"noopener noreferrer"},Ds=s("707. \u8BBE\u8BA1\u94FE\u8868"),As=s(" \u{1F4AF}"),Bs=a(`<details class="custom-container details"><summary>707. \u8BBE\u8BA1\u94FE\u8868</summary><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">ListNode</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>val <span class="token operator">=</span> x
        self<span class="token punctuation">.</span><span class="token builtin">next</span> <span class="token operator">=</span> <span class="token boolean">None</span>


<span class="token keyword">class</span> <span class="token class-name">MyLinkedList</span><span class="token punctuation">:</span>

    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>head <span class="token operator">=</span> ListNode<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>size <span class="token operator">=</span> <span class="token number">0</span>

    <span class="token keyword">def</span> <span class="token function">get</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> index<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token builtin">int</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> index <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token keyword">or</span> index <span class="token operator">&gt;=</span> self<span class="token punctuation">.</span>size<span class="token punctuation">:</span>
            <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span>
        cur <span class="token operator">=</span> self<span class="token punctuation">.</span>head
        <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>index <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            cur <span class="token operator">=</span> cur<span class="token punctuation">.</span><span class="token builtin">next</span>
        <span class="token keyword">return</span> cur<span class="token punctuation">.</span>val

    <span class="token keyword">def</span> <span class="token function">addAtHead</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> val<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
        new_node <span class="token operator">=</span> ListNode<span class="token punctuation">(</span>val<span class="token punctuation">)</span>
        new_node<span class="token punctuation">.</span><span class="token builtin">next</span> <span class="token operator">=</span> self<span class="token punctuation">.</span>head<span class="token punctuation">.</span><span class="token builtin">next</span>
        self<span class="token punctuation">.</span>head<span class="token punctuation">.</span><span class="token builtin">next</span> <span class="token operator">=</span> new_node
        self<span class="token punctuation">.</span>size <span class="token operator">+=</span> <span class="token number">1</span>

    <span class="token keyword">def</span> <span class="token function">addAtTail</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> val<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
        new_node <span class="token operator">=</span> ListNode<span class="token punctuation">(</span>val<span class="token punctuation">)</span>
        cur <span class="token operator">=</span> self<span class="token punctuation">.</span>head
        <span class="token keyword">while</span> cur<span class="token punctuation">.</span><span class="token builtin">next</span><span class="token punctuation">:</span>
            cur <span class="token operator">=</span> cur<span class="token punctuation">.</span><span class="token builtin">next</span>
        cur<span class="token punctuation">.</span><span class="token builtin">next</span> <span class="token operator">=</span> new_node
        self<span class="token punctuation">.</span>size <span class="token operator">+=</span> <span class="token number">1</span>

    <span class="token keyword">def</span> <span class="token function">addAtIndex</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> index<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">,</span> val<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> index <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">:</span>
            self<span class="token punctuation">.</span>addAtHead<span class="token punctuation">(</span>val<span class="token punctuation">)</span>
            <span class="token keyword">return</span>
        <span class="token keyword">elif</span> index <span class="token operator">==</span> self<span class="token punctuation">.</span>size<span class="token punctuation">:</span>
            self<span class="token punctuation">.</span>addAtTail<span class="token punctuation">(</span>val<span class="token punctuation">)</span>
            <span class="token keyword">return</span>
        <span class="token keyword">elif</span> index <span class="token operator">&gt;</span> self<span class="token punctuation">.</span>size<span class="token punctuation">:</span>
            <span class="token keyword">return</span>
        new_node <span class="token operator">=</span> ListNode<span class="token punctuation">(</span>val<span class="token punctuation">)</span>
        pre <span class="token operator">=</span> self<span class="token punctuation">.</span>head
        <span class="token keyword">while</span> index<span class="token punctuation">:</span>
            pre <span class="token operator">=</span> pre<span class="token punctuation">.</span><span class="token builtin">next</span>
            index <span class="token operator">-=</span> <span class="token number">1</span>
        new_node<span class="token punctuation">.</span><span class="token builtin">next</span> <span class="token operator">=</span> pre<span class="token punctuation">.</span><span class="token builtin">next</span>
        pre<span class="token punctuation">.</span><span class="token builtin">next</span> <span class="token operator">=</span> new_node
        self<span class="token punctuation">.</span>size <span class="token operator">+=</span> <span class="token number">1</span>

    <span class="token keyword">def</span> <span class="token function">deleteAtIndex</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> index<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> index <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token keyword">or</span> index <span class="token operator">&gt;=</span> self<span class="token punctuation">.</span>size<span class="token punctuation">:</span>
            <span class="token keyword">return</span>
        pre <span class="token operator">=</span> self<span class="token punctuation">.</span>head
        <span class="token keyword">while</span> index<span class="token punctuation">:</span>
            pre <span class="token operator">=</span> pre<span class="token punctuation">.</span><span class="token builtin">next</span>
            index <span class="token operator">-=</span> <span class="token number">1</span>
        pre<span class="token punctuation">.</span><span class="token builtin">next</span> <span class="token operator">=</span> pre<span class="token punctuation">.</span><span class="token builtin">next</span><span class="token punctuation">.</span><span class="token builtin">next</span>
        self<span class="token punctuation">.</span>size <span class="token operator">-=</span> <span class="token number">1</span>

<span class="token comment"># Your MyLinkedList object will be instantiated and called as such:</span>
<span class="token comment"># obj = MyLinkedList()</span>
<span class="token comment"># param_1 = obj.get(index)</span>
<span class="token comment"># obj.addAtHead(val)</span>
<span class="token comment"># obj.addAtTail(val)</span>
<span class="token comment"># obj.addAtIndex(index,val)</span>
<span class="token comment"># obj.deleteAtIndex(index)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br></div></div></details>`,1),zs={id:"_876-\u94FE\u8868\u7684\u4E2D\u95F4\u7ED3\u70B9",tabindex:"-1"},Es=n("a",{class:"header-anchor",href:"#_876-\u94FE\u8868\u7684\u4E2D\u95F4\u7ED3\u70B9","aria-hidden":"true"},"#",-1),Fs=s(),Ts={href:"https://leetcode.cn/problems/middle-of-the-linked-list/",target:"_blank",rel:"noopener noreferrer"},js=s("876. \u94FE\u8868\u7684\u4E2D\u95F4\u7ED3\u70B9"),Cs=a(`<details class="custom-container details"><summary>876. \u94FE\u8868\u7684\u4E2D\u95F4\u7ED3\u70B9</summary><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">ListNode</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> val<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token builtin">next</span><span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>val <span class="token operator">=</span> val
        self<span class="token punctuation">.</span><span class="token builtin">next</span> <span class="token operator">=</span> <span class="token builtin">next</span>


<span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">middleNode</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> head<span class="token punctuation">:</span> ListNode<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> ListNode<span class="token punctuation">:</span>
        <span class="token comment"># \u5FEB\u6162\u6307\u9488\u521D\u59CB\u5316\u6307\u5411 head</span>
        slow <span class="token operator">=</span> fast <span class="token operator">=</span> head
        <span class="token comment"># \u5FEB\u6307\u9488\u8D70\u5230\u672B\u5C3E\u65F6\u505C\u6B62</span>
        <span class="token keyword">while</span> fast <span class="token keyword">and</span> fast<span class="token punctuation">.</span><span class="token builtin">next</span><span class="token punctuation">:</span>
            <span class="token comment"># \u6162\u6307\u9488\u8D70\u4E00\u6B65\uFF0C\u5FEB\u6307\u9488\u8D70\u4E24\u6B65</span>
            slow <span class="token operator">=</span> slow<span class="token punctuation">.</span><span class="token builtin">next</span>
            fast <span class="token operator">=</span> fast<span class="token punctuation">.</span><span class="token builtin">next</span><span class="token punctuation">.</span><span class="token builtin">next</span>
        <span class="token comment"># \u6162\u6307\u9488\u6307\u5411\u4E2D\u70B9</span>
        <span class="token keyword">return</span> slow
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div></details>`,1),Ks={id:"\u9762\u8BD5\u9898-02-07-\u94FE\u8868\u76F8\u4EA4",tabindex:"-1"},Ps=n("a",{class:"header-anchor",href:"#\u9762\u8BD5\u9898-02-07-\u94FE\u8868\u76F8\u4EA4","aria-hidden":"true"},"#",-1),Vs=s(),Hs={href:"https://leetcode.cn/problems/intersection-of-two-linked-lists-lcci/",target:"_blank",rel:"noopener noreferrer"},Ms=s("\u9762\u8BD5\u9898 02.07. \u94FE\u8868\u76F8\u4EA4"),Os=a(`<details class="custom-container details"><summary>\u94FE\u8868\u76F8\u4EA4</summary><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token comment"># Definition for singly-linked list.</span>
<span class="token keyword">class</span> <span class="token class-name">ListNode</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>val <span class="token operator">=</span> x
        self<span class="token punctuation">.</span><span class="token builtin">next</span> <span class="token operator">=</span> <span class="token boolean">None</span>


<span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">getIntersectionNode</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> headA<span class="token punctuation">:</span> ListNode<span class="token punctuation">,</span> headB<span class="token punctuation">:</span> ListNode<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> ListNode<span class="token punctuation">:</span>
        <span class="token keyword">if</span> <span class="token keyword">not</span> headA <span class="token keyword">or</span> <span class="token keyword">not</span> headB<span class="token punctuation">:</span>
            <span class="token keyword">return</span> <span class="token boolean">None</span>
        pa <span class="token operator">=</span> headA
        pb <span class="token operator">=</span> headB
        <span class="token keyword">while</span> pa <span class="token operator">!=</span> pb<span class="token punctuation">:</span>
            <span class="token keyword">if</span> <span class="token keyword">not</span> pa<span class="token punctuation">:</span>
                pa <span class="token operator">=</span> headB
            <span class="token keyword">else</span><span class="token punctuation">:</span>
                pa <span class="token operator">=</span> pa<span class="token punctuation">.</span><span class="token builtin">next</span>
            <span class="token keyword">if</span> <span class="token keyword">not</span> pb<span class="token punctuation">:</span>
                pb <span class="token operator">=</span> headA
            <span class="token keyword">else</span><span class="token punctuation">:</span>
                pb <span class="token operator">=</span> pb<span class="token punctuation">.</span><span class="token builtin">next</span>
        <span class="token keyword">return</span> pa
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div></details>`,1),Gs={id:"\u5251\u6307-offer-22-\u94FE\u8868\u4E2D\u5012\u6570\u7B2C-k-\u4E2A\u8282\u70B9",tabindex:"-1"},Rs=n("a",{class:"header-anchor",href:"#\u5251\u6307-offer-22-\u94FE\u8868\u4E2D\u5012\u6570\u7B2C-k-\u4E2A\u8282\u70B9","aria-hidden":"true"},"#",-1),Ys=s(),qs={href:"https://leetcode.cn/problems/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof/",target:"_blank",rel:"noopener noreferrer"},Js=s("\u5251\u6307 Offer 22. \u94FE\u8868\u4E2D\u5012\u6570\u7B2C k \u4E2A\u8282\u70B9"),Qs=a(`<details class="custom-container details"><summary>\u5251\u6307 Offer 22. \u94FE\u8868\u4E2D\u5012\u6570\u7B2C k \u4E2A\u8282\u70B9</summary><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token comment"># Definition for singly-linked list.</span>
<span class="token keyword">class</span> <span class="token class-name">ListNode</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>val <span class="token operator">=</span> x
        self<span class="token punctuation">.</span><span class="token builtin">next</span> <span class="token operator">=</span> <span class="token boolean">None</span>


<span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">getKthFromEnd</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> head<span class="token punctuation">:</span> ListNode<span class="token punctuation">,</span> k<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> ListNode<span class="token punctuation">:</span>
        <span class="token keyword">pass</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div></details>`,1);function Us(Ws,Xs){const p=t("ExternalLinkIcon");return o(),l(c,null,[k,n("h2",b,[d,m,n("a",h,[_,e(p)])]),y,n("h2",f,[w,x,n("a",v,[g,e(p)]),N]),L,n("h2",S,[I,D,n("a",A,[B,e(p)])]),z,n("h2",E,[F,T,n("a",j,[C,e(p)])]),K,n("h2",P,[V,H,n("a",M,[O,e(p)]),G]),R,n("h2",Y,[q,J,n("a",Q,[U,e(p)])]),W,n("h2",X,[Z,$,n("a",nn,[sn,e(p)]),an]),pn,n("h2",en,[tn,on,n("a",ln,[cn,e(p)])]),rn,n("h2",un,[kn,bn,n("a",dn,[mn,e(p)])]),hn,n("h2",_n,[yn,fn,n("a",wn,[xn,e(p)])]),vn,n("h2",gn,[Nn,Ln,n("a",Sn,[In,e(p)])]),Dn,n("h2",An,[Bn,zn,n("a",En,[Fn,e(p)])]),Tn,n("h2",jn,[Cn,Kn,n("a",Pn,[Vn,e(p)])]),Hn,n("h2",Mn,[On,Gn,n("a",Rn,[Yn,e(p)])]),qn,n("h2",Jn,[Qn,Un,n("a",Wn,[Xn,e(p)])]),Zn,n("h2",$n,[ns,ss,n("a",as,[ps,e(p)])]),es,n("h2",ts,[os,ls,n("a",cs,[rs,e(p)]),is]),us,n("h2",ks,[bs,ds,n("a",ms,[hs,e(p)])]),_s,n("h2",ys,[fs,ws,n("a",xs,[vs,e(p)])]),gs,n("h2",Ns,[Ls,Ss,n("a",Is,[Ds,e(p)]),As]),Bs,n("h2",zs,[Es,Fs,n("a",Ts,[js,e(p)])]),Cs,n("h2",Ks,[Ps,Vs,n("a",Hs,[Ms,e(p)])]),Os,n("h2",Gs,[Rs,Ys,n("a",qs,[Js,e(p)])]),Qs],64)}var na=r(u,[["render",Us]]);export{na as default};
