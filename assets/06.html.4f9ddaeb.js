import{r as t,o as p,a as o,b as a,d as s,F as l,c,e}from"./app.897a2dcd.js";import{_ as u}from"./plugin-vue_export-helper.21dcd24c.js";const r={},i=c(`<h1 id="k8s-\u544A\u8B66\u89C4\u5219" tabindex="-1"><a class="header-anchor" href="#k8s-\u544A\u8B66\u89C4\u5219" aria-hidden="true">#</a> K8S \u544A\u8B66\u89C4\u5219</h1><blockquote><p>\u6574\u7406\u4E00\u4E9B K8S \u7684\u544A\u8B66\u89C4\u5219</p></blockquote><h2 id="\u5DE5\u4F5C\u8D1F\u8F7D" tabindex="-1"><a class="header-anchor" href="#\u5DE5\u4F5C\u8D1F\u8F7D" aria-hidden="true">#</a> \u5DE5\u4F5C\u8D1F\u8F7D</h2><ul><li>Pod \u78C1\u76D8\u4F7F\u7528\u7387</li></ul><div class="language-promql ext-promql line-numbers-mode"><pre class="language-promql"><code><span class="token keyword">max</span><span class="token punctuation">(</span>container_fs_usage_bytes<span class="token context-labels"><span class="token punctuation">{</span><span class="token label-key attr-name">pod</span><span class="token punctuation">!=</span><span class="token label-value attr-value">&quot;&quot;</span><span class="token punctuation">,</span> <span class="token label-key attr-name">namespace</span><span class="token punctuation">!=</span><span class="token label-value attr-value">&quot;monitoring&quot;</span><span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token keyword">by</span> <span class="token vector-match"><span class="token punctuation">(</span><span class="token label-key attr-name">pod</span><span class="token punctuation">,</span> <span class="token label-key attr-name">namespace</span><span class="token punctuation">,</span> <span class="token label-key attr-name">device</span><span class="token punctuation">)</span></span><span class="token operator">/</span><span class="token keyword">max</span><span class="token punctuation">(</span>container_fs_limit_bytes<span class="token context-labels"><span class="token punctuation">{</span><span class="token label-key attr-name">pod</span><span class="token punctuation">!=</span><span class="token label-value attr-value">&quot;&quot;</span><span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token keyword">by</span> <span class="token vector-match"><span class="token punctuation">(</span><span class="token label-key attr-name">pod</span><span class="token punctuation">,</span><span class="token label-key attr-name">namespace</span><span class="token punctuation">,</span> <span class="token label-key attr-name">device</span><span class="token punctuation">)</span></span> <span class="token operator">*</span> <span class="token number">100</span>  <span class="token operator">&gt;</span> <span class="token number">60</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li>Pod \u542F\u52A8\u8D85\u65F6\u5931\u8D25</li></ul><div class="language-promql ext-promql line-numbers-mode"><pre class="language-promql"><code>kube_pod_container_status_waiting_reason <span class="token operator">==</span> <span class="token number">1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li>Pod \u9891\u7E41\u91CD\u542F</li></ul><div class="language-promql ext-promql line-numbers-mode"><pre class="language-promql"><code><span class="token function">increase</span><span class="token punctuation">(</span>kube_pod_container_status_restarts_total<span class="token context-range"><span class="token punctuation">[</span><span class="token range-duration number">5m</span><span class="token punctuation">]</span></span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li>Pod \u72B6\u6001\u5F02\u5E38</li></ul><div class="language-promql ext-promql line-numbers-mode"><pre class="language-promql"><code>kube_pod_status_phase<span class="token context-labels"><span class="token punctuation">{</span><span class="token label-key attr-name">phase</span><span class="token punctuation">=~</span><span class="token label-value attr-value">&quot;Pending|Unknown|Failed&quot;</span><span class="token punctuation">}</span></span> <span class="token operator">&gt;</span> <span class="token number">0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li>\u5BB9\u5668\u5185\u5B58\u4F7F\u7528\u7387\u5927\u4E8E 80%</li></ul><div class="language-promql ext-promql line-numbers-mode"><pre class="language-promql"><code><span class="token punctuation">(</span><span class="token keyword">sum</span><span class="token punctuation">(</span>container_memory_working_set_bytes<span class="token context-labels"><span class="token punctuation">{</span><span class="token label-key attr-name">id</span><span class="token punctuation">!=</span><span class="token label-value attr-value">&quot;/&quot;</span><span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token keyword">by</span> <span class="token vector-match"><span class="token punctuation">(</span><span class="token label-key attr-name">instance</span><span class="token punctuation">,</span> <span class="token label-key attr-name">name</span><span class="token punctuation">,</span> <span class="token label-key attr-name">container</span><span class="token punctuation">,</span> <span class="token label-key attr-name">pod</span><span class="token punctuation">,</span> <span class="token label-key attr-name">namespace</span><span class="token punctuation">)</span></span> <span class="token operator">/</span> <span class="token keyword">sum</span><span class="token punctuation">(</span>container_spec_memory_limit_bytes<span class="token context-labels"><span class="token punctuation">{</span><span class="token label-key attr-name">id</span><span class="token punctuation">!=</span><span class="token label-value attr-value">&quot;/&quot;</span><span class="token punctuation">}</span></span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">by</span> <span class="token vector-match"><span class="token punctuation">(</span><span class="token label-key attr-name">instance</span><span class="token punctuation">,</span> <span class="token label-key attr-name">name</span><span class="token punctuation">,</span> <span class="token label-key attr-name">container</span><span class="token punctuation">,</span> <span class="token label-key attr-name">pod</span><span class="token punctuation">,</span> <span class="token label-key attr-name">namespace</span><span class="token punctuation">)</span></span> <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">80</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li>\u5BB9\u5668 CPU \u4F7F\u7528\u7387\u5927\u4E8E 80%</li></ul><div class="language-promql ext-promql line-numbers-mode"><pre class="language-promql"><code><span class="token keyword">sum</span><span class="token punctuation">(</span><span class="token function">rate</span><span class="token punctuation">(</span>container_cpu_usage_seconds_total<span class="token context-labels"><span class="token punctuation">{</span><span class="token label-key attr-name">container</span><span class="token punctuation">!=</span><span class="token label-value attr-value">&quot;POD&quot;</span><span class="token punctuation">}</span></span><span class="token context-range"><span class="token punctuation">[</span><span class="token range-duration number">5m</span><span class="token punctuation">]</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">by</span> <span class="token vector-match"><span class="token punctuation">(</span><span class="token label-key attr-name">namespace</span><span class="token punctuation">,</span> <span class="token label-key attr-name">pod</span><span class="token punctuation">,</span> <span class="token label-key attr-name">container</span><span class="token punctuation">)</span></span> <span class="token operator">/</span> <span class="token keyword">sum</span><span class="token punctuation">(</span>kube_pod_container_resource_limits_cpu_cores<span class="token punctuation">)</span> <span class="token keyword">by</span> <span class="token vector-match"><span class="token punctuation">(</span><span class="token label-key attr-name">namespace</span><span class="token punctuation">,</span> <span class="token label-key attr-name">pod</span><span class="token punctuation">,</span> <span class="token label-key attr-name">container</span><span class="token punctuation">)</span></span> <span class="token operator">&gt;</span> <span class="token number">0.8</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="k8s-\u8282\u70B9" tabindex="-1"><a class="header-anchor" href="#k8s-\u8282\u70B9" aria-hidden="true">#</a> K8S \u8282\u70B9</h2><ul><li>\u8282\u70B9\u5185\u5B58\u53EF\u7528\u7387\u4E0D\u8DB3 10%</li></ul><div class="language-promql ext-promql line-numbers-mode"><pre class="language-promql"><code>node_memory_MemAvailable_bytes <span class="token operator">/</span> node_memory_MemTotal_bytes <span class="token operator">*</span> <span class="token number">100</span> <span class="token operator">&lt;</span> <span class="token number">10</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li>\u8282\u70B9\u72B6\u6001\u5F02\u5E38</li></ul><div class="language-promql ext-promql line-numbers-mode"><pre class="language-promql"><code>kube_node_status_condition<span class="token context-labels"><span class="token punctuation">{</span><span class="token label-key attr-name">condition</span><span class="token punctuation">=</span><span class="token label-value attr-value">&quot;Ready&quot;</span><span class="token punctuation">,</span><span class="token label-key attr-name">status</span><span class="token punctuation">=</span><span class="token label-value attr-value">&quot;true&quot;</span><span class="token punctuation">}</span></span><span class="token operator">==</span>  <span class="token number">0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li>\u8282\u70B9 CPU \u4F7F\u7528\u7387\u8D85\u8FC7 80%</li></ul><div class="language-promql ext-promql line-numbers-mode"><pre class="language-promql"><code><span class="token number">100</span> <span class="token operator">-</span> <span class="token punctuation">(</span><span class="token keyword">avg</span> <span class="token keyword">by</span><span class="token vector-match"><span class="token punctuation">(</span><span class="token label-key attr-name">instance</span><span class="token punctuation">)</span></span> <span class="token punctuation">(</span><span class="token function">rate</span><span class="token punctuation">(</span>node_cpu_seconds_total<span class="token context-labels"><span class="token punctuation">{</span><span class="token label-key attr-name">mode</span><span class="token punctuation">=</span><span class="token label-value attr-value">&quot;idle&quot;</span><span class="token punctuation">}</span></span><span class="token context-range"><span class="token punctuation">[</span><span class="token range-duration number">2m</span><span class="token punctuation">]</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">80</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li>\u8282\u70B9\u78C1\u76D8\u53EF\u7528\u7387\u4E0D\u8DB3 10%</li></ul><div class="language-promql ext-promql line-numbers-mode"><pre class="language-promql"><code><span class="token punctuation">(</span>node_filesystem_avail_bytes <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token operator">/</span> node_filesystem_size_bytes <span class="token operator">&lt;</span> <span class="token number">10</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="\u5176\u4ED6" tabindex="-1"><a class="header-anchor" href="#\u5176\u4ED6" aria-hidden="true">#</a> \u5176\u4ED6</h2>`,25),k={href:"https://awesome-prometheus-alerts.grep.to/rules.html#kubernetes",target:"_blank",rel:"noopener noreferrer"},m=e("\u4E00\u4E2A\u5F88\u5168\u7684\u5217\u8868"),d={href:"https://github.com/prometheus-operator/kube-prometheus/blob/03b36af546c26ef6106c4fd141a948293ec0a18f/manifests/prometheus-rules.yaml#L1",target:"_blank",rel:"noopener noreferrer"},b=e("kube-prometheus/manifests/prometheus-rules.yaml");function _(v,y){const n=t("ExternalLinkIcon");return p(),o(l,null,[i,a("ul",null,[a("li",null,[a("a",k,[m,s(n)])]),a("li",null,[a("a",d,[b,s(n)])])])],64)}var q=u(r,[["render",_]]);export{q as default};
